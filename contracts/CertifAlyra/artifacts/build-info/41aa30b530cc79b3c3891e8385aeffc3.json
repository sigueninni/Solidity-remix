{
	"id": "41aa30b530cc79b3c3891e8385aeffc3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CertifAlyra/OpiDex.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract OpiDex is Ownable {\n    IERC20 opi;\n    address public opiContractAddress;\n\n    //OPI price in ETH\n    uint256 public tokensPerEth = 50;\n\n    event OpiBuyed(\n        address _sounderAddress,\n        uint256 _amountOfETH,\n        uint256 _amountOfOPIs\n    );\n\n    constructor(address _opiAddress) {\n        opi = IERC20(_opiAddress);\n        opiContractAddress = _opiAddress;\n       // opi.initSupply(address(this),1000);\n    }\n\n    /**\n     * @notice Sounders users to buy token for ETH\n     */\n    function buyTokens() public payable returns (uint256 tokenAmount) {\n        require(msg.value > 0, \"ETH needed to buy OPIs\");\n\n        uint256 amountToBuy = msg.value * tokensPerEth;\n\n        // check if the Vendor Contract has enough amount of tokens for the transaction\n        uint256 OpiDexBalance = opi.balanceOf(opiContractAddress);\n        require(\n            OpiDexBalance >= amountToBuy,\n            \"Not enough OPIs in balance of OpiDex\"\n        );\n\n        // Transfer token to the msg.sender\n        bool sent = opi.transfer(msg.sender, amountToBuy);\n        /*  opi.approve(msg.sender,amountToBuy);\n        bool sent = opi.transferFrom(\n            opiContractAddress,\n            msg.sender,\n            amountToBuy\n        );*/\n        require(sent, \"Failed to transfer OPIs to user\");\n\n        // emit the event\n        emit OpiBuyed(msg.sender, msg.value, amountToBuy);\n\n        return amountToBuy;\n    }\n\n    /**\n     * @notice Allow the owner of the contract to withdraw ETH\n     */\n    function withdraw() public onlyOwner {\n        uint256 OpiDexBalance = address(this).balance;\n        require(OpiDexBalance > 0, \"OpiDexBalance has nothing to withdraw\");\n\n        (bool sent, ) = msg.sender.call{value: address(this).balance}(\"\");\n        require(sent, \"Failed to withdraw!\");\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CertifAlyra/OpiDex.sol": {
				"OpiDex": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_opiAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_sounderAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amountOfETH",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amountOfOPIs",
									"type": "uint256"
								}
							],
							"name": "OpiBuyed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "buyTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "opiContractAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokensPerEth",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CertifAlyra/OpiDex.sol\":172:1987  contract OpiDex is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/CertifAlyra/OpiDex.sol\":314:316  50 */\n  0x32\n    /* \"contracts/CertifAlyra/OpiDex.sol\":284:316  uint256 public tokensPerEth = 50 */\n  0x03\n  sstore\n    /* \"contracts/CertifAlyra/OpiDex.sol\":444:607  constructor(address _opiAddress) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/CertifAlyra/OpiDex.sol\":500:511  _opiAddress */\n  dup1\n    /* \"contracts/CertifAlyra/OpiDex.sol\":487:490  opi */\n  0x01\n  0x00\n    /* \"contracts/CertifAlyra/OpiDex.sol\":487:512  opi = IERC20(_opiAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CertifAlyra/OpiDex.sol\":543:554  _opiAddress */\n  dup1\n    /* \"contracts/CertifAlyra/OpiDex.sol\":522:540  opiContractAddress */\n  0x02\n  0x00\n    /* \"contracts/CertifAlyra/OpiDex.sol\":522:554  opiContractAddress = _opiAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CertifAlyra/OpiDex.sol\":444:607  constructor(address _opiAddress) {... */\n  pop\n    /* \"contracts/CertifAlyra/OpiDex.sol\":172:1987  contract OpiDex is Ownable {... */\n  jump(tag_12)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_28\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_30\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_31:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_33\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_36\n  tag_16\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":932:1051   */\ntag_35:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_37\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_21\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/CertifAlyra/OpiDex.sol\":172:1987  contract OpiDex is Ownable {... */\ntag_12:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CertifAlyra/OpiDex.sol\":172:1987  contract OpiDex is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xcbdd69b5\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xd0febe4c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_9:\n      dup1\n      0x7c8069\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/CertifAlyra/OpiDex.sol\":221:254  address public opiContractAddress */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1687:1985  function withdraw() public onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      pop\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CertifAlyra/OpiDex.sol\":284:316  uint256 public tokensPerEth = 50 */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CertifAlyra/OpiDex.sol\":680:1602  function buyTokens() public payable returns (uint256 tokenAmount) {... */\n    tag_7:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"contracts/CertifAlyra/OpiDex.sol\":221:254  address public opiContractAddress */\n    tag_12:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1687:1985  function withdraw() public onlyOwner {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_39\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_39:\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1734:1755  uint256 OpiDexBalance */\n      0x00\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1758:1779  address(this).balance */\n      selfbalance\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1734:1779  uint256 OpiDexBalance = address(this).balance */\n      swap1\n      pop\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1813:1814  0 */\n      0x00\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1797:1810  OpiDexBalance */\n      dup2\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1797:1814  OpiDexBalance > 0 */\n      gt\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1789:1856  require(OpiDexBalance > 0, \"OpiDexBalance has nothing to withdraw\") */\n      tag_42\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_43\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_42:\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1868:1877  bool sent */\n      0x00\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1883:1893  msg.sender */\n      caller\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1883:1898  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1906:1927  address(this).balance */\n      selfbalance\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1883:1932  msg.sender.call{value: address(this).balance}(\"\") */\n      mload(0x40)\n      tag_45\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_49\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_48)\n    tag_49:\n      0x60\n      swap2\n      pop\n    tag_48:\n      pop\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1867:1932  (bool sent, ) = msg.sender.call{value: address(this).balance}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1950:1954  sent */\n      dup1\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1942:1978  require(sent, \"Failed to withdraw!\") */\n      tag_50\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_50:\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1724:1985  {... */\n      pop\n      pop\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1687:1985  function withdraw() public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_54\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CertifAlyra/OpiDex.sol\":284:316  uint256 public tokensPerEth = 50 */\n    tag_27:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/CertifAlyra/OpiDex.sol\":680:1602  function buyTokens() public payable returns (uint256 tokenAmount) {... */\n    tag_31:\n        /* \"contracts/CertifAlyra/OpiDex.sol\":725:744  uint256 tokenAmount */\n      0x00\n        /* \"contracts/CertifAlyra/OpiDex.sol\":776:777  0 */\n      dup1\n        /* \"contracts/CertifAlyra/OpiDex.sol\":764:773  msg.value */\n      callvalue\n        /* \"contracts/CertifAlyra/OpiDex.sol\":764:777  msg.value > 0 */\n      gt\n        /* \"contracts/CertifAlyra/OpiDex.sol\":756:804  require(msg.value > 0, \"ETH needed to buy OPIs\") */\n      tag_60\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_60:\n        /* \"contracts/CertifAlyra/OpiDex.sol\":815:834  uint256 amountToBuy */\n      0x00\n        /* \"contracts/CertifAlyra/OpiDex.sol\":849:861  tokensPerEth */\n      sload(0x03)\n        /* \"contracts/CertifAlyra/OpiDex.sol\":837:846  msg.value */\n      callvalue\n        /* \"contracts/CertifAlyra/OpiDex.sol\":837:861  msg.value * tokensPerEth */\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n        /* \"contracts/CertifAlyra/OpiDex.sol\":815:861  uint256 amountToBuy = msg.value * tokensPerEth */\n      swap1\n      pop\n        /* \"contracts/CertifAlyra/OpiDex.sol\":960:981  uint256 OpiDexBalance */\n      0x00\n        /* \"contracts/CertifAlyra/OpiDex.sol\":984:987  opi */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CertifAlyra/OpiDex.sol\":984:997  opi.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/CertifAlyra/OpiDex.sol\":998:1016  opiContractAddress */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CertifAlyra/OpiDex.sol\":984:1017  opi.balanceOf(opiContractAddress) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_65\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_65:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_67\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"contracts/CertifAlyra/OpiDex.sol\":960:1017  uint256 OpiDexBalance = opi.balanceOf(opiContractAddress) */\n      swap1\n      pop\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1065:1076  amountToBuy */\n      dup2\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1048:1061  OpiDexBalance */\n      dup2\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1048:1076  OpiDexBalance >= amountToBuy */\n      lt\n      iszero\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1027:1138  require(... */\n      tag_70\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_70:\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1193:1202  bool sent */\n      0x00\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1205:1208  opi */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1205:1217  opi.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1218:1228  msg.sender */\n      caller\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1230:1241  amountToBuy */\n      dup6\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1205:1242  opi.transfer(msg.sender, amountToBuy) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap3\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_76\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_76:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1193:1242  bool sent = opi.transfer(msg.sender, amountToBuy) */\n      swap1\n      pop\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1440:1444  sent */\n      dup1\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1432:1480  require(sent, \"Failed to transfer OPIs to user\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_79:\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1522:1566  OpiBuyed(msg.sender, msg.value, amountToBuy) */\n      0x942941e55a29218802e75bce2dab045559e45a25e7030efb9a2c5fe5f5851c43\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1531:1541  msg.sender */\n      caller\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1543:1552  msg.value */\n      callvalue\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1554:1565  amountToBuy */\n      dup6\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1522:1566  OpiBuyed(msg.sender, msg.value, amountToBuy) */\n      mload(0x40)\n      tag_82\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1584:1595  amountToBuy */\n      dup3\n        /* \"contracts/CertifAlyra/OpiDex.sol\":1577:1595  return amountToBuy */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/CertifAlyra/OpiDex.sol\":680:1602  function buyTokens() public payable returns (uint256 tokenAmount) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_87\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_23\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_95:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_100:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_101:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_137\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_100\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_102:\n        /* \"#utility.yul\":328:352   */\n      tag_139\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_101\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_14:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_141\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_102\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:670   */\n    tag_103:\n        /* \"#utility.yul\":630:637   */\n      0x00\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":648:664   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:794   */\n    tag_104:\n        /* \"#utility.yul\":763:787   */\n      tag_144\n        /* \"#utility.yul\":781:786   */\n      dup2\n        /* \"#utility.yul\":763:787   */\n      tag_103\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":758:761   */\n      dup3\n        /* \"#utility.yul\":751:788   */\n      mstore\n        /* \"#utility.yul\":676:794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:1022   */\n    tag_29:\n        /* \"#utility.yul\":893:897   */\n      0x00\n        /* \"#utility.yul\":931:933   */\n      0x20\n        /* \"#utility.yul\":920:929   */\n      dup3\n        /* \"#utility.yul\":916:934   */\n      add\n        /* \"#utility.yul\":908:934   */\n      swap1\n      pop\n        /* \"#utility.yul\":944:1015   */\n      tag_146\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1001:1010   */\n      dup4\n        /* \"#utility.yul\":997:1014   */\n      add\n        /* \"#utility.yul\":988:994   */\n      dup5\n        /* \"#utility.yul\":944:1015   */\n      tag_104\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":800:1022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1109:1226   */\n    tag_106:\n        /* \"#utility.yul\":1218:1219   */\n      0x00\n        /* \"#utility.yul\":1215:1216   */\n      dup1\n        /* \"#utility.yul\":1208:1220   */\n      revert\n        /* \"#utility.yul\":1355:1477   */\n    tag_108:\n        /* \"#utility.yul\":1428:1452   */\n      tag_151\n        /* \"#utility.yul\":1446:1451   */\n      dup2\n        /* \"#utility.yul\":1428:1452   */\n      tag_101\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":1421:1426   */\n      dup2\n        /* \"#utility.yul\":1418:1453   */\n      eq\n        /* \"#utility.yul\":1408:1471   */\n      tag_152\n      jumpi\n        /* \"#utility.yul\":1467:1468   */\n      0x00\n        /* \"#utility.yul\":1464:1465   */\n      dup1\n        /* \"#utility.yul\":1457:1469   */\n      revert\n        /* \"#utility.yul\":1408:1471   */\n    tag_152:\n        /* \"#utility.yul\":1355:1477   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1483:1622   */\n    tag_109:\n        /* \"#utility.yul\":1529:1534   */\n      0x00\n        /* \"#utility.yul\":1567:1573   */\n      dup2\n        /* \"#utility.yul\":1554:1574   */\n      calldataload\n        /* \"#utility.yul\":1545:1574   */\n      swap1\n      pop\n        /* \"#utility.yul\":1583:1616   */\n      tag_154\n        /* \"#utility.yul\":1610:1615   */\n      dup2\n        /* \"#utility.yul\":1583:1616   */\n      tag_108\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1483:1622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1628:1957   */\n    tag_36:\n        /* \"#utility.yul\":1687:1693   */\n      0x00\n        /* \"#utility.yul\":1736:1738   */\n      0x20\n        /* \"#utility.yul\":1724:1733   */\n      dup3\n        /* \"#utility.yul\":1715:1722   */\n      dup5\n        /* \"#utility.yul\":1711:1734   */\n      sub\n        /* \"#utility.yul\":1707:1739   */\n      slt\n        /* \"#utility.yul\":1704:1823   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":1742:1821   */\n      tag_157\n      tag_106\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1704:1823   */\n    tag_156:\n        /* \"#utility.yul\":1862:1863   */\n      0x00\n        /* \"#utility.yul\":1887:1940   */\n      tag_158\n        /* \"#utility.yul\":1932:1939   */\n      dup5\n        /* \"#utility.yul\":1923:1929   */\n      dup3\n        /* \"#utility.yul\":1912:1921   */\n      dup6\n        /* \"#utility.yul\":1908:1930   */\n      add\n        /* \"#utility.yul\":1887:1940   */\n      tag_109\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1877:1940   */\n      swap2\n      pop\n        /* \"#utility.yul\":1833:1950   */\n      pop\n        /* \"#utility.yul\":1628:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2132   */\n    tag_110:\n        /* \"#utility.yul\":2047:2058   */\n      0x00\n        /* \"#utility.yul\":2081:2087   */\n      dup3\n        /* \"#utility.yul\":2076:2079   */\n      dup3\n        /* \"#utility.yul\":2069:2088   */\n      mstore\n        /* \"#utility.yul\":2121:2125   */\n      0x20\n        /* \"#utility.yul\":2116:2119   */\n      dup3\n        /* \"#utility.yul\":2112:2126   */\n      add\n        /* \"#utility.yul\":2097:2126   */\n      swap1\n      pop\n        /* \"#utility.yul\":1963:2132   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2138:2362   */\n    tag_111:\n        /* \"#utility.yul\":2278:2312   */\n      0x4f706944657842616c616e636520686173206e6f7468696e6720746f20776974\n        /* \"#utility.yul\":2274:2275   */\n      0x00\n        /* \"#utility.yul\":2266:2272   */\n      dup3\n        /* \"#utility.yul\":2262:2276   */\n      add\n        /* \"#utility.yul\":2255:2313   */\n      mstore\n        /* \"#utility.yul\":2347:2354   */\n      0x6864726177000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2342:2344   */\n      0x20\n        /* \"#utility.yul\":2334:2340   */\n      dup3\n        /* \"#utility.yul\":2330:2345   */\n      add\n        /* \"#utility.yul\":2323:2355   */\n      mstore\n        /* \"#utility.yul\":2138:2362   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2368:2734   */\n    tag_112:\n        /* \"#utility.yul\":2510:2513   */\n      0x00\n        /* \"#utility.yul\":2531:2598   */\n      tag_162\n        /* \"#utility.yul\":2595:2597   */\n      0x25\n        /* \"#utility.yul\":2590:2593   */\n      dup4\n        /* \"#utility.yul\":2531:2598   */\n      tag_110\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2524:2598   */\n      swap2\n      pop\n        /* \"#utility.yul\":2607:2700   */\n      tag_163\n        /* \"#utility.yul\":2696:2699   */\n      dup3\n        /* \"#utility.yul\":2607:2700   */\n      tag_111\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2725:2727   */\n      0x40\n        /* \"#utility.yul\":2720:2723   */\n      dup3\n        /* \"#utility.yul\":2716:2728   */\n      add\n        /* \"#utility.yul\":2709:2728   */\n      swap1\n      pop\n        /* \"#utility.yul\":2368:2734   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2740:3159   */\n    tag_44:\n        /* \"#utility.yul\":2906:2910   */\n      0x00\n        /* \"#utility.yul\":2944:2946   */\n      0x20\n        /* \"#utility.yul\":2933:2942   */\n      dup3\n        /* \"#utility.yul\":2929:2947   */\n      add\n        /* \"#utility.yul\":2921:2947   */\n      swap1\n      pop\n        /* \"#utility.yul\":2993:3002   */\n      dup2\n        /* \"#utility.yul\":2987:2991   */\n      dup2\n        /* \"#utility.yul\":2983:3003   */\n      sub\n        /* \"#utility.yul\":2979:2980   */\n      0x00\n        /* \"#utility.yul\":2968:2977   */\n      dup4\n        /* \"#utility.yul\":2964:2981   */\n      add\n        /* \"#utility.yul\":2957:3004   */\n      mstore\n        /* \"#utility.yul\":3021:3152   */\n      tag_165\n        /* \"#utility.yul\":3147:3151   */\n      dup2\n        /* \"#utility.yul\":3021:3152   */\n      tag_112\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":3013:3152   */\n      swap1\n      pop\n        /* \"#utility.yul\":2740:3159   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3165:3312   */\n    tag_113:\n        /* \"#utility.yul\":3266:3277   */\n      0x00\n        /* \"#utility.yul\":3303:3306   */\n      dup2\n        /* \"#utility.yul\":3288:3306   */\n      swap1\n      pop\n        /* \"#utility.yul\":3165:3312   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3318:3432   */\n    tag_114:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3438:3836   */\n    tag_115:\n        /* \"#utility.yul\":3597:3600   */\n      0x00\n        /* \"#utility.yul\":3618:3701   */\n      tag_169\n        /* \"#utility.yul\":3699:3700   */\n      0x00\n        /* \"#utility.yul\":3694:3697   */\n      dup4\n        /* \"#utility.yul\":3618:3701   */\n      tag_113\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":3611:3701   */\n      swap2\n      pop\n        /* \"#utility.yul\":3710:3803   */\n      tag_170\n        /* \"#utility.yul\":3799:3802   */\n      dup3\n        /* \"#utility.yul\":3710:3803   */\n      tag_114\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":3828:3829   */\n      0x00\n        /* \"#utility.yul\":3823:3826   */\n      dup3\n        /* \"#utility.yul\":3819:3830   */\n      add\n        /* \"#utility.yul\":3812:3830   */\n      swap1\n      pop\n        /* \"#utility.yul\":3438:3836   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3842:4221   */\n    tag_46:\n        /* \"#utility.yul\":4026:4029   */\n      0x00\n        /* \"#utility.yul\":4048:4195   */\n      tag_172\n        /* \"#utility.yul\":4191:4194   */\n      dup3\n        /* \"#utility.yul\":4048:4195   */\n      tag_115\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":4041:4195   */\n      swap2\n      pop\n        /* \"#utility.yul\":4212:4215   */\n      dup2\n        /* \"#utility.yul\":4205:4215   */\n      swap1\n      pop\n        /* \"#utility.yul\":3842:4221   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4227:4396   */\n    tag_116:\n        /* \"#utility.yul\":4367:4388   */\n      0x4661696c656420746f2077697468647261772100000000000000000000000000\n        /* \"#utility.yul\":4363:4364   */\n      0x00\n        /* \"#utility.yul\":4355:4361   */\n      dup3\n        /* \"#utility.yul\":4351:4365   */\n      add\n        /* \"#utility.yul\":4344:4389   */\n      mstore\n        /* \"#utility.yul\":4227:4396   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4402:4768   */\n    tag_117:\n        /* \"#utility.yul\":4544:4547   */\n      0x00\n        /* \"#utility.yul\":4565:4632   */\n      tag_175\n        /* \"#utility.yul\":4629:4631   */\n      0x13\n        /* \"#utility.yul\":4624:4627   */\n      dup4\n        /* \"#utility.yul\":4565:4632   */\n      tag_110\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":4558:4632   */\n      swap2\n      pop\n        /* \"#utility.yul\":4641:4734   */\n      tag_176\n        /* \"#utility.yul\":4730:4733   */\n      dup3\n        /* \"#utility.yul\":4641:4734   */\n      tag_116\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":4759:4761   */\n      0x20\n        /* \"#utility.yul\":4754:4757   */\n      dup3\n        /* \"#utility.yul\":4750:4762   */\n      add\n        /* \"#utility.yul\":4743:4762   */\n      swap1\n      pop\n        /* \"#utility.yul\":4402:4768   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4774:5193   */\n    tag_52:\n        /* \"#utility.yul\":4940:4944   */\n      0x00\n        /* \"#utility.yul\":4978:4980   */\n      0x20\n        /* \"#utility.yul\":4967:4976   */\n      dup3\n        /* \"#utility.yul\":4963:4981   */\n      add\n        /* \"#utility.yul\":4955:4981   */\n      swap1\n      pop\n        /* \"#utility.yul\":5027:5036   */\n      dup2\n        /* \"#utility.yul\":5021:5025   */\n      dup2\n        /* \"#utility.yul\":5017:5037   */\n      sub\n        /* \"#utility.yul\":5013:5014   */\n      0x00\n        /* \"#utility.yul\":5002:5011   */\n      dup4\n        /* \"#utility.yul\":4998:5015   */\n      add\n        /* \"#utility.yul\":4991:5038   */\n      mstore\n        /* \"#utility.yul\":5055:5186   */\n      tag_178\n        /* \"#utility.yul\":5181:5185   */\n      dup2\n        /* \"#utility.yul\":5055:5186   */\n      tag_117\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":5047:5186   */\n      swap1\n      pop\n        /* \"#utility.yul\":4774:5193   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5199:5371   */\n    tag_118:\n        /* \"#utility.yul\":5339:5363   */\n      0x455448206e656564656420746f20627579204f50497300000000000000000000\n        /* \"#utility.yul\":5335:5336   */\n      0x00\n        /* \"#utility.yul\":5327:5333   */\n      dup3\n        /* \"#utility.yul\":5323:5337   */\n      add\n        /* \"#utility.yul\":5316:5364   */\n      mstore\n        /* \"#utility.yul\":5199:5371   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5377:5743   */\n    tag_119:\n        /* \"#utility.yul\":5519:5522   */\n      0x00\n        /* \"#utility.yul\":5540:5607   */\n      tag_181\n        /* \"#utility.yul\":5604:5606   */\n      0x16\n        /* \"#utility.yul\":5599:5602   */\n      dup4\n        /* \"#utility.yul\":5540:5607   */\n      tag_110\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":5533:5607   */\n      swap2\n      pop\n        /* \"#utility.yul\":5616:5709   */\n      tag_182\n        /* \"#utility.yul\":5705:5708   */\n      dup3\n        /* \"#utility.yul\":5616:5709   */\n      tag_118\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":5734:5736   */\n      0x20\n        /* \"#utility.yul\":5729:5732   */\n      dup3\n        /* \"#utility.yul\":5725:5737   */\n      add\n        /* \"#utility.yul\":5718:5737   */\n      swap1\n      pop\n        /* \"#utility.yul\":5377:5743   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5749:6168   */\n    tag_62:\n        /* \"#utility.yul\":5915:5919   */\n      0x00\n        /* \"#utility.yul\":5953:5955   */\n      0x20\n        /* \"#utility.yul\":5942:5951   */\n      dup3\n        /* \"#utility.yul\":5938:5956   */\n      add\n        /* \"#utility.yul\":5930:5956   */\n      swap1\n      pop\n        /* \"#utility.yul\":6002:6011   */\n      dup2\n        /* \"#utility.yul\":5996:6000   */\n      dup2\n        /* \"#utility.yul\":5992:6012   */\n      sub\n        /* \"#utility.yul\":5988:5989   */\n      0x00\n        /* \"#utility.yul\":5977:5986   */\n      dup4\n        /* \"#utility.yul\":5973:5990   */\n      add\n        /* \"#utility.yul\":5966:6013   */\n      mstore\n        /* \"#utility.yul\":6030:6161   */\n      tag_184\n        /* \"#utility.yul\":6156:6160   */\n      dup2\n        /* \"#utility.yul\":6030:6161   */\n      tag_119\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":6022:6161   */\n      swap1\n      pop\n        /* \"#utility.yul\":5749:6168   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6174:6354   */\n    tag_120:\n        /* \"#utility.yul\":6222:6299   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6219:6220   */\n      0x00\n        /* \"#utility.yul\":6212:6300   */\n      mstore\n        /* \"#utility.yul\":6319:6323   */\n      0x11\n        /* \"#utility.yul\":6316:6317   */\n      0x04\n        /* \"#utility.yul\":6309:6324   */\n      mstore\n        /* \"#utility.yul\":6343:6347   */\n      0x24\n        /* \"#utility.yul\":6340:6341   */\n      0x00\n        /* \"#utility.yul\":6333:6348   */\n      revert\n        /* \"#utility.yul\":6360:6770   */\n    tag_64:\n        /* \"#utility.yul\":6400:6407   */\n      0x00\n        /* \"#utility.yul\":6423:6443   */\n      tag_187\n        /* \"#utility.yul\":6441:6442   */\n      dup3\n        /* \"#utility.yul\":6423:6443   */\n      tag_103\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":6418:6443   */\n      swap2\n      pop\n        /* \"#utility.yul\":6457:6477   */\n      tag_188\n        /* \"#utility.yul\":6475:6476   */\n      dup4\n        /* \"#utility.yul\":6457:6477   */\n      tag_103\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":6452:6477   */\n      swap3\n      pop\n        /* \"#utility.yul\":6512:6513   */\n      dup3\n        /* \"#utility.yul\":6509:6510   */\n      dup3\n        /* \"#utility.yul\":6505:6514   */\n      mul\n        /* \"#utility.yul\":6534:6564   */\n      tag_189\n        /* \"#utility.yul\":6552:6563   */\n      dup2\n        /* \"#utility.yul\":6534:6564   */\n      tag_103\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":6523:6564   */\n      swap2\n      pop\n        /* \"#utility.yul\":6713:6714   */\n      dup3\n        /* \"#utility.yul\":6704:6711   */\n      dup3\n        /* \"#utility.yul\":6700:6715   */\n      div\n        /* \"#utility.yul\":6697:6698   */\n      dup5\n        /* \"#utility.yul\":6694:6716   */\n      eq\n        /* \"#utility.yul\":6674:6675   */\n      dup4\n        /* \"#utility.yul\":6667:6676   */\n      iszero\n        /* \"#utility.yul\":6647:6730   */\n      or\n        /* \"#utility.yul\":6624:6763   */\n      tag_190\n      jumpi\n        /* \"#utility.yul\":6743:6761   */\n      tag_191\n      tag_120\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":6624:6763   */\n    tag_190:\n        /* \"#utility.yul\":6408:6770   */\n      pop\n        /* \"#utility.yul\":6360:6770   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6776:6898   */\n    tag_121:\n        /* \"#utility.yul\":6849:6873   */\n      tag_193\n        /* \"#utility.yul\":6867:6872   */\n      dup2\n        /* \"#utility.yul\":6849:6873   */\n      tag_103\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":6842:6847   */\n      dup2\n        /* \"#utility.yul\":6839:6874   */\n      eq\n        /* \"#utility.yul\":6829:6892   */\n      tag_194\n      jumpi\n        /* \"#utility.yul\":6888:6889   */\n      0x00\n        /* \"#utility.yul\":6885:6886   */\n      dup1\n        /* \"#utility.yul\":6878:6890   */\n      revert\n        /* \"#utility.yul\":6829:6892   */\n    tag_194:\n        /* \"#utility.yul\":6776:6898   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6904:7047   */\n    tag_122:\n        /* \"#utility.yul\":6961:6966   */\n      0x00\n        /* \"#utility.yul\":6992:6998   */\n      dup2\n        /* \"#utility.yul\":6986:6999   */\n      mload\n        /* \"#utility.yul\":6977:6999   */\n      swap1\n      pop\n        /* \"#utility.yul\":7008:7041   */\n      tag_196\n        /* \"#utility.yul\":7035:7040   */\n      dup2\n        /* \"#utility.yul\":7008:7041   */\n      tag_121\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":6904:7047   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7053:7404   */\n    tag_69:\n        /* \"#utility.yul\":7123:7129   */\n      0x00\n        /* \"#utility.yul\":7172:7174   */\n      0x20\n        /* \"#utility.yul\":7160:7169   */\n      dup3\n        /* \"#utility.yul\":7151:7158   */\n      dup5\n        /* \"#utility.yul\":7147:7170   */\n      sub\n        /* \"#utility.yul\":7143:7175   */\n      slt\n        /* \"#utility.yul\":7140:7259   */\n      iszero\n      tag_198\n      jumpi\n        /* \"#utility.yul\":7178:7257   */\n      tag_199\n      tag_106\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":7140:7259   */\n    tag_198:\n        /* \"#utility.yul\":7298:7299   */\n      0x00\n        /* \"#utility.yul\":7323:7387   */\n      tag_200\n        /* \"#utility.yul\":7379:7386   */\n      dup5\n        /* \"#utility.yul\":7370:7376   */\n      dup3\n        /* \"#utility.yul\":7359:7368   */\n      dup6\n        /* \"#utility.yul\":7355:7377   */\n      add\n        /* \"#utility.yul\":7323:7387   */\n      tag_122\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":7313:7387   */\n      swap2\n      pop\n        /* \"#utility.yul\":7269:7397   */\n      pop\n        /* \"#utility.yul\":7053:7404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7410:7633   */\n    tag_123:\n        /* \"#utility.yul\":7550:7584   */\n      0x4e6f7420656e6f756768204f50497320696e2062616c616e6365206f66204f70\n        /* \"#utility.yul\":7546:7547   */\n      0x00\n        /* \"#utility.yul\":7538:7544   */\n      dup3\n        /* \"#utility.yul\":7534:7548   */\n      add\n        /* \"#utility.yul\":7527:7585   */\n      mstore\n        /* \"#utility.yul\":7619:7625   */\n      0x6944657800000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7614:7616   */\n      0x20\n        /* \"#utility.yul\":7606:7612   */\n      dup3\n        /* \"#utility.yul\":7602:7617   */\n      add\n        /* \"#utility.yul\":7595:7626   */\n      mstore\n        /* \"#utility.yul\":7410:7633   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7639:8005   */\n    tag_124:\n        /* \"#utility.yul\":7781:7784   */\n      0x00\n        /* \"#utility.yul\":7802:7869   */\n      tag_203\n        /* \"#utility.yul\":7866:7868   */\n      0x24\n        /* \"#utility.yul\":7861:7864   */\n      dup4\n        /* \"#utility.yul\":7802:7869   */\n      tag_110\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":7795:7869   */\n      swap2\n      pop\n        /* \"#utility.yul\":7878:7971   */\n      tag_204\n        /* \"#utility.yul\":7967:7970   */\n      dup3\n        /* \"#utility.yul\":7878:7971   */\n      tag_123\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":7996:7998   */\n      0x40\n        /* \"#utility.yul\":7991:7994   */\n      dup3\n        /* \"#utility.yul\":7987:7999   */\n      add\n        /* \"#utility.yul\":7980:7999   */\n      swap1\n      pop\n        /* \"#utility.yul\":7639:8005   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8011:8430   */\n    tag_72:\n        /* \"#utility.yul\":8177:8181   */\n      0x00\n        /* \"#utility.yul\":8215:8217   */\n      0x20\n        /* \"#utility.yul\":8204:8213   */\n      dup3\n        /* \"#utility.yul\":8200:8218   */\n      add\n        /* \"#utility.yul\":8192:8218   */\n      swap1\n      pop\n        /* \"#utility.yul\":8264:8273   */\n      dup2\n        /* \"#utility.yul\":8258:8262   */\n      dup2\n        /* \"#utility.yul\":8254:8274   */\n      sub\n        /* \"#utility.yul\":8250:8251   */\n      0x00\n        /* \"#utility.yul\":8239:8248   */\n      dup4\n        /* \"#utility.yul\":8235:8252   */\n      add\n        /* \"#utility.yul\":8228:8275   */\n      mstore\n        /* \"#utility.yul\":8292:8423   */\n      tag_206\n        /* \"#utility.yul\":8418:8422   */\n      dup2\n        /* \"#utility.yul\":8292:8423   */\n      tag_124\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":8284:8423   */\n      swap1\n      pop\n        /* \"#utility.yul\":8011:8430   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8436:8768   */\n    tag_74:\n        /* \"#utility.yul\":8557:8561   */\n      0x00\n        /* \"#utility.yul\":8595:8597   */\n      0x40\n        /* \"#utility.yul\":8584:8593   */\n      dup3\n        /* \"#utility.yul\":8580:8598   */\n      add\n        /* \"#utility.yul\":8572:8598   */\n      swap1\n      pop\n        /* \"#utility.yul\":8608:8679   */\n      tag_208\n        /* \"#utility.yul\":8676:8677   */\n      0x00\n        /* \"#utility.yul\":8665:8674   */\n      dup4\n        /* \"#utility.yul\":8661:8678   */\n      add\n        /* \"#utility.yul\":8652:8658   */\n      dup6\n        /* \"#utility.yul\":8608:8679   */\n      tag_102\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":8689:8761   */\n      tag_209\n        /* \"#utility.yul\":8757:8759   */\n      0x20\n        /* \"#utility.yul\":8746:8755   */\n      dup4\n        /* \"#utility.yul\":8742:8760   */\n      add\n        /* \"#utility.yul\":8733:8739   */\n      dup5\n        /* \"#utility.yul\":8689:8761   */\n      tag_104\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":8436:8768   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8774:8864   */\n    tag_125:\n        /* \"#utility.yul\":8808:8815   */\n      0x00\n        /* \"#utility.yul\":8851:8856   */\n      dup2\n        /* \"#utility.yul\":8844:8857   */\n      iszero\n        /* \"#utility.yul\":8837:8858   */\n      iszero\n        /* \"#utility.yul\":8826:8858   */\n      swap1\n      pop\n        /* \"#utility.yul\":8774:8864   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8870:8986   */\n    tag_126:\n        /* \"#utility.yul\":8940:8961   */\n      tag_212\n        /* \"#utility.yul\":8955:8960   */\n      dup2\n        /* \"#utility.yul\":8940:8961   */\n      tag_125\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":8933:8938   */\n      dup2\n        /* \"#utility.yul\":8930:8962   */\n      eq\n        /* \"#utility.yul\":8920:8980   */\n      tag_213\n      jumpi\n        /* \"#utility.yul\":8976:8977   */\n      0x00\n        /* \"#utility.yul\":8973:8974   */\n      dup1\n        /* \"#utility.yul\":8966:8978   */\n      revert\n        /* \"#utility.yul\":8920:8980   */\n    tag_213:\n        /* \"#utility.yul\":8870:8986   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8992:9129   */\n    tag_127:\n        /* \"#utility.yul\":9046:9051   */\n      0x00\n        /* \"#utility.yul\":9077:9083   */\n      dup2\n        /* \"#utility.yul\":9071:9084   */\n      mload\n        /* \"#utility.yul\":9062:9084   */\n      swap1\n      pop\n        /* \"#utility.yul\":9093:9123   */\n      tag_215\n        /* \"#utility.yul\":9117:9122   */\n      dup2\n        /* \"#utility.yul\":9093:9123   */\n      tag_126\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":8992:9129   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9135:9480   */\n    tag_78:\n        /* \"#utility.yul\":9202:9208   */\n      0x00\n        /* \"#utility.yul\":9251:9253   */\n      0x20\n        /* \"#utility.yul\":9239:9248   */\n      dup3\n        /* \"#utility.yul\":9230:9237   */\n      dup5\n        /* \"#utility.yul\":9226:9249   */\n      sub\n        /* \"#utility.yul\":9222:9254   */\n      slt\n        /* \"#utility.yul\":9219:9338   */\n      iszero\n      tag_217\n      jumpi\n        /* \"#utility.yul\":9257:9336   */\n      tag_218\n      tag_106\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":9219:9338   */\n    tag_217:\n        /* \"#utility.yul\":9377:9378   */\n      0x00\n        /* \"#utility.yul\":9402:9463   */\n      tag_219\n        /* \"#utility.yul\":9455:9462   */\n      dup5\n        /* \"#utility.yul\":9446:9452   */\n      dup3\n        /* \"#utility.yul\":9435:9444   */\n      dup6\n        /* \"#utility.yul\":9431:9453   */\n      add\n        /* \"#utility.yul\":9402:9463   */\n      tag_127\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":9392:9463   */\n      swap2\n      pop\n        /* \"#utility.yul\":9348:9473   */\n      pop\n        /* \"#utility.yul\":9135:9480   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9486:9667   */\n    tag_128:\n        /* \"#utility.yul\":9626:9659   */\n      0x4661696c656420746f207472616e73666572204f50497320746f207573657200\n        /* \"#utility.yul\":9622:9623   */\n      0x00\n        /* \"#utility.yul\":9614:9620   */\n      dup3\n        /* \"#utility.yul\":9610:9624   */\n      add\n        /* \"#utility.yul\":9603:9660   */\n      mstore\n        /* \"#utility.yul\":9486:9667   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9673:10039   */\n    tag_129:\n        /* \"#utility.yul\":9815:9818   */\n      0x00\n        /* \"#utility.yul\":9836:9903   */\n      tag_222\n        /* \"#utility.yul\":9900:9902   */\n      0x1f\n        /* \"#utility.yul\":9895:9898   */\n      dup4\n        /* \"#utility.yul\":9836:9903   */\n      tag_110\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":9829:9903   */\n      swap2\n      pop\n        /* \"#utility.yul\":9912:10005   */\n      tag_223\n        /* \"#utility.yul\":10001:10004   */\n      dup3\n        /* \"#utility.yul\":9912:10005   */\n      tag_128\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":10030:10032   */\n      0x20\n        /* \"#utility.yul\":10025:10028   */\n      dup3\n        /* \"#utility.yul\":10021:10033   */\n      add\n        /* \"#utility.yul\":10014:10033   */\n      swap1\n      pop\n        /* \"#utility.yul\":9673:10039   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10045:10464   */\n    tag_81:\n        /* \"#utility.yul\":10211:10215   */\n      0x00\n        /* \"#utility.yul\":10249:10251   */\n      0x20\n        /* \"#utility.yul\":10238:10247   */\n      dup3\n        /* \"#utility.yul\":10234:10252   */\n      add\n        /* \"#utility.yul\":10226:10252   */\n      swap1\n      pop\n        /* \"#utility.yul\":10298:10307   */\n      dup2\n        /* \"#utility.yul\":10292:10296   */\n      dup2\n        /* \"#utility.yul\":10288:10308   */\n      sub\n        /* \"#utility.yul\":10284:10285   */\n      0x00\n        /* \"#utility.yul\":10273:10282   */\n      dup4\n        /* \"#utility.yul\":10269:10286   */\n      add\n        /* \"#utility.yul\":10262:10309   */\n      mstore\n        /* \"#utility.yul\":10326:10457   */\n      tag_225\n        /* \"#utility.yul\":10452:10456   */\n      dup2\n        /* \"#utility.yul\":10326:10457   */\n      tag_129\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":10318:10457   */\n      swap1\n      pop\n        /* \"#utility.yul\":10045:10464   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10470:10912   */\n    tag_83:\n        /* \"#utility.yul\":10619:10623   */\n      0x00\n        /* \"#utility.yul\":10657:10659   */\n      0x60\n        /* \"#utility.yul\":10646:10655   */\n      dup3\n        /* \"#utility.yul\":10642:10660   */\n      add\n        /* \"#utility.yul\":10634:10660   */\n      swap1\n      pop\n        /* \"#utility.yul\":10670:10741   */\n      tag_227\n        /* \"#utility.yul\":10738:10739   */\n      0x00\n        /* \"#utility.yul\":10727:10736   */\n      dup4\n        /* \"#utility.yul\":10723:10740   */\n      add\n        /* \"#utility.yul\":10714:10720   */\n      dup7\n        /* \"#utility.yul\":10670:10741   */\n      tag_102\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":10751:10823   */\n      tag_228\n        /* \"#utility.yul\":10819:10821   */\n      0x20\n        /* \"#utility.yul\":10808:10817   */\n      dup4\n        /* \"#utility.yul\":10804:10822   */\n      add\n        /* \"#utility.yul\":10795:10801   */\n      dup6\n        /* \"#utility.yul\":10751:10823   */\n      tag_104\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":10833:10905   */\n      tag_229\n        /* \"#utility.yul\":10901:10903   */\n      0x40\n        /* \"#utility.yul\":10890:10899   */\n      dup4\n        /* \"#utility.yul\":10886:10904   */\n      add\n        /* \"#utility.yul\":10877:10883   */\n      dup5\n        /* \"#utility.yul\":10833:10905   */\n      tag_104\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":10470:10912   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10918:11143   */\n    tag_130:\n        /* \"#utility.yul\":11058:11092   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":11054:11055   */\n      0x00\n        /* \"#utility.yul\":11046:11052   */\n      dup3\n        /* \"#utility.yul\":11042:11056   */\n      add\n        /* \"#utility.yul\":11035:11093   */\n      mstore\n        /* \"#utility.yul\":11127:11135   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11122:11124   */\n      0x20\n        /* \"#utility.yul\":11114:11120   */\n      dup3\n        /* \"#utility.yul\":11110:11125   */\n      add\n        /* \"#utility.yul\":11103:11136   */\n      mstore\n        /* \"#utility.yul\":10918:11143   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11149:11515   */\n    tag_131:\n        /* \"#utility.yul\":11291:11294   */\n      0x00\n        /* \"#utility.yul\":11312:11379   */\n      tag_232\n        /* \"#utility.yul\":11376:11378   */\n      0x26\n        /* \"#utility.yul\":11371:11374   */\n      dup4\n        /* \"#utility.yul\":11312:11379   */\n      tag_110\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":11305:11379   */\n      swap2\n      pop\n        /* \"#utility.yul\":11388:11481   */\n      tag_233\n        /* \"#utility.yul\":11477:11480   */\n      dup3\n        /* \"#utility.yul\":11388:11481   */\n      tag_130\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":11506:11508   */\n      0x40\n        /* \"#utility.yul\":11501:11504   */\n      dup3\n        /* \"#utility.yul\":11497:11509   */\n      add\n        /* \"#utility.yul\":11490:11509   */\n      swap1\n      pop\n        /* \"#utility.yul\":11149:11515   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11521:11940   */\n    tag_89:\n        /* \"#utility.yul\":11687:11691   */\n      0x00\n        /* \"#utility.yul\":11725:11727   */\n      0x20\n        /* \"#utility.yul\":11714:11723   */\n      dup3\n        /* \"#utility.yul\":11710:11728   */\n      add\n        /* \"#utility.yul\":11702:11728   */\n      swap1\n      pop\n        /* \"#utility.yul\":11774:11783   */\n      dup2\n        /* \"#utility.yul\":11768:11772   */\n      dup2\n        /* \"#utility.yul\":11764:11784   */\n      sub\n        /* \"#utility.yul\":11760:11761   */\n      0x00\n        /* \"#utility.yul\":11749:11758   */\n      dup4\n        /* \"#utility.yul\":11745:11762   */\n      add\n        /* \"#utility.yul\":11738:11785   */\n      mstore\n        /* \"#utility.yul\":11802:11933   */\n      tag_235\n        /* \"#utility.yul\":11928:11932   */\n      dup2\n        /* \"#utility.yul\":11802:11933   */\n      tag_131\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":11794:11933   */\n      swap1\n      pop\n        /* \"#utility.yul\":11521:11940   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11946:12128   */\n    tag_132:\n        /* \"#utility.yul\":12086:12120   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12082:12083   */\n      0x00\n        /* \"#utility.yul\":12074:12080   */\n      dup3\n        /* \"#utility.yul\":12070:12084   */\n      add\n        /* \"#utility.yul\":12063:12121   */\n      mstore\n        /* \"#utility.yul\":11946:12128   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12134:12500   */\n    tag_133:\n        /* \"#utility.yul\":12276:12279   */\n      0x00\n        /* \"#utility.yul\":12297:12364   */\n      tag_238\n        /* \"#utility.yul\":12361:12363   */\n      0x20\n        /* \"#utility.yul\":12356:12359   */\n      dup4\n        /* \"#utility.yul\":12297:12364   */\n      tag_110\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":12290:12364   */\n      swap2\n      pop\n        /* \"#utility.yul\":12373:12466   */\n      tag_239\n        /* \"#utility.yul\":12462:12465   */\n      dup3\n        /* \"#utility.yul\":12373:12466   */\n      tag_132\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":12491:12493   */\n      0x20\n        /* \"#utility.yul\":12486:12489   */\n      dup3\n        /* \"#utility.yul\":12482:12494   */\n      add\n        /* \"#utility.yul\":12475:12494   */\n      swap1\n      pop\n        /* \"#utility.yul\":12134:12500   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12506:12925   */\n    tag_97:\n        /* \"#utility.yul\":12672:12676   */\n      0x00\n        /* \"#utility.yul\":12710:12712   */\n      0x20\n        /* \"#utility.yul\":12699:12708   */\n      dup3\n        /* \"#utility.yul\":12695:12713   */\n      add\n        /* \"#utility.yul\":12687:12713   */\n      swap1\n      pop\n        /* \"#utility.yul\":12759:12768   */\n      dup2\n        /* \"#utility.yul\":12753:12757   */\n      dup2\n        /* \"#utility.yul\":12749:12769   */\n      sub\n        /* \"#utility.yul\":12745:12746   */\n      0x00\n        /* \"#utility.yul\":12734:12743   */\n      dup4\n        /* \"#utility.yul\":12730:12747   */\n      add\n        /* \"#utility.yul\":12723:12770   */\n      mstore\n        /* \"#utility.yul\":12787:12918   */\n      tag_241\n        /* \"#utility.yul\":12913:12917   */\n      dup2\n        /* \"#utility.yul\":12787:12918   */\n      tag_133\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":12779:12918   */\n      swap1\n      pop\n        /* \"#utility.yul\":12506:12925   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209f300e27e12a27dbbb3637a92ea9c3a643f82cad22296c31058237b80b54f72f64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_250": {
									"entryPoint": null,
									"id": 250,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_202": {
									"entryPoint": 229,
									"id": 202,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 237,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 433,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:4",
														"type": ""
													}
												],
												"src": "696:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:4"
															},
															"nodeType": "YulIf",
															"src": "932:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:4",
														"type": ""
													}
												],
												"src": "845:351:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405260326003553480156200001657600080fd5b5060405162000ff038038062000ff083398181016040528101906200003c91906200021b565b6200005c62000050620000e560201b60201c565b620000ed60201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200024d565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001e382620001b6565b9050919050565b620001f581620001d6565b81146200020157600080fd5b50565b6000815190506200021581620001ea565b92915050565b600060208284031215620002345762000233620001b1565b5b6000620002448482850162000204565b91505092915050565b610d93806200025d6000396000f3fe60806040526004361061006f5760003560e01c80638da5cb5b1161004e5780638da5cb5b146100cd578063cbdd69b5146100f8578063d0febe4c14610123578063f2fde38b146101415761006f565b80627c8069146100745780633ccfd60b1461009f578063715018a6146100b6575b600080fd5b34801561008057600080fd5b5061008961016a565b6040516100969190610764565b60405180910390f35b3480156100ab57600080fd5b506100b4610190565b005b3480156100c257600080fd5b506100cb610290565b005b3480156100d957600080fd5b506100e26102a4565b6040516100ef9190610764565b60405180910390f35b34801561010457600080fd5b5061010d6102cd565b60405161011a9190610798565b60405180910390f35b61012b6102d3565b6040516101389190610798565b60405180910390f35b34801561014d57600080fd5b50610168600480360381019061016391906107e4565b610556565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101986105d9565b6000479050600081116101e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d790610894565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff1647604051610206906108e5565b60006040518083038185875af1925050503d8060008114610243576040519150601f19603f3d011682016040523d82523d6000602084013e610248565b606091505b505090508061028c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028390610946565b60405180910390fd5b5050565b6102986105d9565b6102a26000610657565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b6000803411610317576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030e906109b2565b60405180910390fd5b6000600354346103279190610a01565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016103a89190610764565b602060405180830381865afa1580156103c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e99190610a6f565b90508181101561042e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042590610b0e565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b815260040161048d929190610b2e565b6020604051808303816000875af11580156104ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d09190610b8f565b905080610512576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050990610c08565b60405180910390fd5b7f942941e55a29218802e75bce2dab045559e45a25e7030efb9a2c5fe5f5851c4333348560405161054593929190610c28565b60405180910390a182935050505090565b61055e6105d9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c490610cd1565b60405180910390fd5b6105d681610657565b50565b6105e161071b565b73ffffffffffffffffffffffffffffffffffffffff166105ff6102a4565b73ffffffffffffffffffffffffffffffffffffffff1614610655576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064c90610d3d565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061074e82610723565b9050919050565b61075e81610743565b82525050565b60006020820190506107796000830184610755565b92915050565b6000819050919050565b6107928161077f565b82525050565b60006020820190506107ad6000830184610789565b92915050565b600080fd5b6107c181610743565b81146107cc57600080fd5b50565b6000813590506107de816107b8565b92915050565b6000602082840312156107fa576107f96107b3565b5b6000610808848285016107cf565b91505092915050565b600082825260208201905092915050565b7f4f706944657842616c616e636520686173206e6f7468696e6720746f2077697460008201527f6864726177000000000000000000000000000000000000000000000000000000602082015250565b600061087e602583610811565b915061088982610822565b604082019050919050565b600060208201905081810360008301526108ad81610871565b9050919050565b600081905092915050565b50565b60006108cf6000836108b4565b91506108da826108bf565b600082019050919050565b60006108f0826108c2565b9150819050919050565b7f4661696c656420746f2077697468647261772100000000000000000000000000600082015250565b6000610930601383610811565b915061093b826108fa565b602082019050919050565b6000602082019050818103600083015261095f81610923565b9050919050565b7f455448206e656564656420746f20627579204f50497300000000000000000000600082015250565b600061099c601683610811565b91506109a782610966565b602082019050919050565b600060208201905081810360008301526109cb8161098f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a0c8261077f565b9150610a178361077f565b9250828202610a258161077f565b91508282048414831517610a3c57610a3b6109d2565b5b5092915050565b610a4c8161077f565b8114610a5757600080fd5b50565b600081519050610a6981610a43565b92915050565b600060208284031215610a8557610a846107b3565b5b6000610a9384828501610a5a565b91505092915050565b7f4e6f7420656e6f756768204f50497320696e2062616c616e6365206f66204f7060008201527f6944657800000000000000000000000000000000000000000000000000000000602082015250565b6000610af8602483610811565b9150610b0382610a9c565b604082019050919050565b60006020820190508181036000830152610b2781610aeb565b9050919050565b6000604082019050610b436000830185610755565b610b506020830184610789565b9392505050565b60008115159050919050565b610b6c81610b57565b8114610b7757600080fd5b50565b600081519050610b8981610b63565b92915050565b600060208284031215610ba557610ba46107b3565b5b6000610bb384828501610b7a565b91505092915050565b7f4661696c656420746f207472616e73666572204f50497320746f207573657200600082015250565b6000610bf2601f83610811565b9150610bfd82610bbc565b602082019050919050565b60006020820190508181036000830152610c2181610be5565b9050919050565b6000606082019050610c3d6000830186610755565b610c4a6020830185610789565b610c576040830184610789565b949350505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610cbb602683610811565b9150610cc682610c5f565b604082019050919050565b60006020820190508181036000830152610cea81610cae565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610d27602083610811565b9150610d3282610cf1565b602082019050919050565b60006020820190508181036000830152610d5681610d1a565b905091905056fea26469706673582212209f300e27e12a27dbbb3637a92ea9c3a643f82cad22296c31058237b80b54f72f64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x32 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xFF0 CODESIZE SUB DUP1 PUSH3 0xFF0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x3C SWAP2 SWAP1 PUSH3 0x21B JUMP JUMPDEST PUSH3 0x5C PUSH3 0x50 PUSH3 0xE5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xED PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x24D JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1E3 DUP3 PUSH3 0x1B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1F5 DUP2 PUSH3 0x1D6 JUMP JUMPDEST DUP2 EQ PUSH3 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x215 DUP2 PUSH3 0x1EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x234 JUMPI PUSH3 0x233 PUSH3 0x1B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x244 DUP5 DUP3 DUP6 ADD PUSH3 0x204 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD93 DUP1 PUSH3 0x25D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xCD JUMPI DUP1 PUSH4 0xCBDD69B5 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0xD0FEBE4C EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x141 JUMPI PUSH2 0x6F JUMP JUMPDEST DUP1 PUSH3 0x7C8069 EQ PUSH2 0x74 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x89 PUSH2 0x16A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB4 PUSH2 0x190 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCB PUSH2 0x290 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE2 PUSH2 0x2A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x2CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x798 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x798 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x168 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x7E4 JUMP JUMPDEST PUSH2 0x556 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x198 PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D7 SWAP1 PUSH2 0x894 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0x206 SWAP1 PUSH2 0x8E5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x243 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x248 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x28C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x283 SWAP1 PUSH2 0x946 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x298 PUSH2 0x5D9 JUMP JUMPDEST PUSH2 0x2A2 PUSH1 0x0 PUSH2 0x657 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLVALUE GT PUSH2 0x317 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30E SWAP1 PUSH2 0x9B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD CALLVALUE PUSH2 0x327 SWAP2 SWAP1 PUSH2 0xA01 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x764 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3E9 SWAP2 SWAP1 PUSH2 0xA6F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x42E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x425 SWAP1 PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48D SWAP3 SWAP2 SWAP1 PUSH2 0xB2E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0xB8F JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x512 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x509 SWAP1 PUSH2 0xC08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x942941E55A29218802E75BCE2DAB045559E45A25E7030EFB9A2C5FE5F5851C43 CALLER CALLVALUE DUP6 PUSH1 0x40 MLOAD PUSH2 0x545 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP3 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x55E PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C4 SWAP1 PUSH2 0xCD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5D6 DUP2 PUSH2 0x657 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x5E1 PUSH2 0x71B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5FF PUSH2 0x2A4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x655 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64C SWAP1 PUSH2 0xD3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74E DUP3 PUSH2 0x723 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x75E DUP2 PUSH2 0x743 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x779 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x755 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x792 DUP2 PUSH2 0x77F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7AD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x789 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7C1 DUP2 PUSH2 0x743 JUMP JUMPDEST DUP2 EQ PUSH2 0x7CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7DE DUP2 PUSH2 0x7B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7FA JUMPI PUSH2 0x7F9 PUSH2 0x7B3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x808 DUP5 DUP3 DUP6 ADD PUSH2 0x7CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F706944657842616C616E636520686173206E6F7468696E6720746F20776974 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6864726177000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87E PUSH1 0x25 DUP4 PUSH2 0x811 JUMP JUMPDEST SWAP2 POP PUSH2 0x889 DUP3 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8AD DUP2 PUSH2 0x871 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8CF PUSH1 0x0 DUP4 PUSH2 0x8B4 JUMP JUMPDEST SWAP2 POP PUSH2 0x8DA DUP3 PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F0 DUP3 PUSH2 0x8C2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661696C656420746F2077697468647261772100000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x930 PUSH1 0x13 DUP4 PUSH2 0x811 JUMP JUMPDEST SWAP2 POP PUSH2 0x93B DUP3 PUSH2 0x8FA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x95F DUP2 PUSH2 0x923 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455448206E656564656420746F20627579204F50497300000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x99C PUSH1 0x16 DUP4 PUSH2 0x811 JUMP JUMPDEST SWAP2 POP PUSH2 0x9A7 DUP3 PUSH2 0x966 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9CB DUP2 PUSH2 0x98F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA0C DUP3 PUSH2 0x77F JUMP JUMPDEST SWAP2 POP PUSH2 0xA17 DUP4 PUSH2 0x77F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xA25 DUP2 PUSH2 0x77F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xA3C JUMPI PUSH2 0xA3B PUSH2 0x9D2 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA4C DUP2 PUSH2 0x77F JUMP JUMPDEST DUP2 EQ PUSH2 0xA57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA69 DUP2 PUSH2 0xA43 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA85 JUMPI PUSH2 0xA84 PUSH2 0x7B3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA93 DUP5 DUP3 DUP6 ADD PUSH2 0xA5A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F756768204F50497320696E2062616C616E6365206F66204F70 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6944657800000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF8 PUSH1 0x24 DUP4 PUSH2 0x811 JUMP JUMPDEST SWAP2 POP PUSH2 0xB03 DUP3 PUSH2 0xA9C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB27 DUP2 PUSH2 0xAEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB43 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x755 JUMP JUMPDEST PUSH2 0xB50 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x789 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6C DUP2 PUSH2 0xB57 JUMP JUMPDEST DUP2 EQ PUSH2 0xB77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB89 DUP2 PUSH2 0xB63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBA5 JUMPI PUSH2 0xBA4 PUSH2 0x7B3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBB3 DUP5 DUP3 DUP6 ADD PUSH2 0xB7A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4661696C656420746F207472616E73666572204F50497320746F207573657200 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF2 PUSH1 0x1F DUP4 PUSH2 0x811 JUMP JUMPDEST SWAP2 POP PUSH2 0xBFD DUP3 PUSH2 0xBBC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC21 DUP2 PUSH2 0xBE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xC3D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x755 JUMP JUMPDEST PUSH2 0xC4A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x789 JUMP JUMPDEST PUSH2 0xC57 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x789 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBB PUSH1 0x26 DUP4 PUSH2 0x811 JUMP JUMPDEST SWAP2 POP PUSH2 0xCC6 DUP3 PUSH2 0xC5F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCEA DUP2 PUSH2 0xCAE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD27 PUSH1 0x20 DUP4 PUSH2 0x811 JUMP JUMPDEST SWAP2 POP PUSH2 0xD32 DUP3 PUSH2 0xCF1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD56 DUP2 PUSH2 0xD1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 ADDRESS 0xE 0x27 0xE1 0x2A 0x27 0xDB 0xBB CALLDATASIZE CALLDATACOPY 0xA9 0x2E 0xA9 0xC3 0xA6 NUMBER 0xF8 0x2C 0xAD 0x22 0x29 PUSH13 0x31058237B80B54F72F64736F6C PUSH4 0x43000811 STOP CALLER ",
							"sourceMap": "172:1815:3:-:0;;;314:2;284:32;;444:163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;500:11:3;487:3;;:25;;;;;;;;;;;;;;;;;;543:11;522:18;;:32;;;;;;;;;;;;;;;;;;444:163;172:1815;;640:96:2;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;172:1815:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_54": {
									"entryPoint": 1497,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_202": {
									"entryPoint": 1819,
									"id": 202,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 1623,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buyTokens_310": {
									"entryPoint": 723,
									"id": 310,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@opiContractAddress_223": {
									"entryPoint": 362,
									"id": 223,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": 676,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 656,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokensPerEth_226": {
									"entryPoint": 717,
									"id": 226,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 1366,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_351": {
									"entryPoint": 400,
									"id": 351,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2020,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_034c23fc4a277fa80072f8b13e3eeadfea757cbc7447f31e55b75fbcbea2c25d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2339,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_458bb05bcea23a525dcd5cd6b64e1afc3b477434a48c45ae9b6e993fdf450e23_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4bcd0a7c3b84d4eacb9dd9f97bfb4fd82d6008c98ec8a5d7b50a883bb6d245ec_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b37f4016ee9ef53bdce1a1464bdafded2ee3b94515ddb78d7b6e31d2218988a0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c31f9a91e2829dd8ff87fae1d79147031c9a7a6aa8cedf9412897889cacf6a2b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2862,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3112,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_034c23fc4a277fa80072f8b13e3eeadfea757cbc7447f31e55b75fbcbea2c25d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3281,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_458bb05bcea23a525dcd5cd6b64e1afc3b477434a48c45ae9b6e993fdf450e23__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4bcd0a7c3b84d4eacb9dd9f97bfb4fd82d6008c98ec8a5d7b50a883bb6d245ec__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b37f4016ee9ef53bdce1a1464bdafded2ee3b94515ddb78d7b6e31d2218988a0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c31f9a91e2829dd8ff87fae1d79147031c9a7a6aa8cedf9412897889cacf6a2b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1944,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2065,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1859,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1827,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2514,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1971,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_034c23fc4a277fa80072f8b13e3eeadfea757cbc7447f31e55b75fbcbea2c25d": {
									"entryPoint": 2298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 3167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_458bb05bcea23a525dcd5cd6b64e1afc3b477434a48c45ae9b6e993fdf450e23": {
									"entryPoint": 2082,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4bcd0a7c3b84d4eacb9dd9f97bfb4fd82d6008c98ec8a5d7b50a883bb6d245ec": {
									"entryPoint": 3004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 3313,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b37f4016ee9ef53bdce1a1464bdafded2ee3b94515ddb78d7b6e31d2218988a0": {
									"entryPoint": 2406,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c31f9a91e2829dd8ff87fae1d79147031c9a7a6aa8cedf9412897889cacf6a2b": {
									"entryPoint": 2716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 2239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2915,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12928:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:4",
														"type": ""
													}
												],
												"src": "7:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:4",
														"type": ""
													}
												],
												"src": "139:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:4",
														"type": ""
													}
												],
												"src": "241:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:4",
														"type": ""
													}
												],
												"src": "365:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "638:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "648:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "659:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "648:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "620:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "630:7:4",
														"type": ""
													}
												],
												"src": "593:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "758:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "781:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "763:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "763:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "751:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "729:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "736:3:4",
														"type": ""
													}
												],
												"src": "676:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "898:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "908:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "931:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "916:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "916:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "908:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "988:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1001:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1012:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "997:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "944:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "944:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "944:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "870:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "882:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "893:4:4",
														"type": ""
													}
												],
												"src": "800:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1078:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1094:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1088:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1088:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1078:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1061:6:4",
														"type": ""
													}
												],
												"src": "1028:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1198:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1215:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1218:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1208:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1208:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1208:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1109:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1321:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1338:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1331:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1331:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1331:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1232:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1398:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1455:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1464:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1467:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1457:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1457:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1457:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1421:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1446:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1428:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1428:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1418:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1418:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1411:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1411:43:4"
															},
															"nodeType": "YulIf",
															"src": "1408:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1391:5:4",
														"type": ""
													}
												],
												"src": "1355:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1535:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1545:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1567:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1554:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1554:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1545:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1610:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1583:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1583:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1583:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1513:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1521:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1529:5:4",
														"type": ""
													}
												],
												"src": "1483:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1694:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1740:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1742:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1742:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1742:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1715:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1724:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1711:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1711:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1736:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1707:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1707:32:4"
															},
															"nodeType": "YulIf",
															"src": "1704:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1833:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1848:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1862:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1852:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1877:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1912:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1923:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1908:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1908:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1932:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1887:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1887:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1877:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1664:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1675:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1687:6:4",
														"type": ""
													}
												],
												"src": "1628:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2059:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2076:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2081:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2069:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2069:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2069:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2097:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2116:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2121:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2112:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2112:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2097:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2031:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2036:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2047:11:4",
														"type": ""
													}
												],
												"src": "1963:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2244:118:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2266:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2274:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2262:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2262:14:4"
																	},
																	{
																		"hexValue": "4f706944657842616c616e636520686173206e6f7468696e6720746f20776974",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2278:34:4",
																		"type": "",
																		"value": "OpiDexBalance has nothing to wit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2255:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2255:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2255:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2334:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2342:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2330:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2330:15:4"
																	},
																	{
																		"hexValue": "6864726177",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2347:7:4",
																		"type": "",
																		"value": "hdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2323:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2323:32:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2323:32:4"
														}
													]
												},
												"name": "store_literal_in_memory_458bb05bcea23a525dcd5cd6b64e1afc3b477434a48c45ae9b6e993fdf450e23",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2236:6:4",
														"type": ""
													}
												],
												"src": "2138:224:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2514:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2524:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2590:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2595:2:4",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2531:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2531:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2524:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2696:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_458bb05bcea23a525dcd5cd6b64e1afc3b477434a48c45ae9b6e993fdf450e23",
																	"nodeType": "YulIdentifier",
																	"src": "2607:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2607:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2607:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2709:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2720:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2725:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2716:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2716:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2709:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_458bb05bcea23a525dcd5cd6b64e1afc3b477434a48c45ae9b6e993fdf450e23_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2502:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2510:3:4",
														"type": ""
													}
												],
												"src": "2368:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2911:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2921:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2933:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2944:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2929:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2929:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2921:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2968:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2979:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2964:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2964:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2987:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2993:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2983:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2983:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2957:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2957:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2957:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3013:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3147:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_458bb05bcea23a525dcd5cd6b64e1afc3b477434a48c45ae9b6e993fdf450e23_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3021:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3021:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3013:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_458bb05bcea23a525dcd5cd6b64e1afc3b477434a48c45ae9b6e993fdf450e23__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2891:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2906:4:4",
														"type": ""
													}
												],
												"src": "2740:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3278:34:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3288:18:4",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3303:3:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3288:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3250:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3255:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3266:11:4",
														"type": ""
													}
												],
												"src": "3165:147:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3424:8:4",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3416:6:4",
														"type": ""
													}
												],
												"src": "3318:114:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3601:235:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3611:90:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3694:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3699:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3618:75:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3618:83:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3611:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3799:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "3710:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3710:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3710:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3812:18:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3823:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3828:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3819:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3819:11:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3812:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3589:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3597:3:4",
														"type": ""
													}
												],
												"src": "3438:398:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4030:191:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4041:154:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4191:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4048:141:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4048:147:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4041:3:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4205:10:4",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4212:3:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4205:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4017:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4026:3:4",
														"type": ""
													}
												],
												"src": "3842:379:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4333:63:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4355:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4363:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4351:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4351:14:4"
																	},
																	{
																		"hexValue": "4661696c656420746f20776974686472617721",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4367:21:4",
																		"type": "",
																		"value": "Failed to withdraw!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4344:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4344:45:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4344:45:4"
														}
													]
												},
												"name": "store_literal_in_memory_034c23fc4a277fa80072f8b13e3eeadfea757cbc7447f31e55b75fbcbea2c25d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4325:6:4",
														"type": ""
													}
												],
												"src": "4227:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4548:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4558:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4624:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4629:2:4",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4565:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4565:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4558:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4730:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_034c23fc4a277fa80072f8b13e3eeadfea757cbc7447f31e55b75fbcbea2c25d",
																	"nodeType": "YulIdentifier",
																	"src": "4641:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4641:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4641:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4743:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4754:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4759:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4750:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4750:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4743:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_034c23fc4a277fa80072f8b13e3eeadfea757cbc7447f31e55b75fbcbea2c25d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4536:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4544:3:4",
														"type": ""
													}
												],
												"src": "4402:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4945:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4955:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4967:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4978:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4963:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4963:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4955:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5002:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5013:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4998:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4998:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5021:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5027:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5017:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5017:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4991:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4991:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4991:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5047:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5181:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_034c23fc4a277fa80072f8b13e3eeadfea757cbc7447f31e55b75fbcbea2c25d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5055:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5055:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5047:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_034c23fc4a277fa80072f8b13e3eeadfea757cbc7447f31e55b75fbcbea2c25d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4925:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4940:4:4",
														"type": ""
													}
												],
												"src": "4774:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5305:66:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5327:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5335:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5323:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5323:14:4"
																	},
																	{
																		"hexValue": "455448206e656564656420746f20627579204f504973",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5339:24:4",
																		"type": "",
																		"value": "ETH needed to buy OPIs"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5316:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5316:48:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5316:48:4"
														}
													]
												},
												"name": "store_literal_in_memory_b37f4016ee9ef53bdce1a1464bdafded2ee3b94515ddb78d7b6e31d2218988a0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5297:6:4",
														"type": ""
													}
												],
												"src": "5199:172:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5523:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5533:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5599:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5604:2:4",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5540:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5540:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5533:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5705:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b37f4016ee9ef53bdce1a1464bdafded2ee3b94515ddb78d7b6e31d2218988a0",
																	"nodeType": "YulIdentifier",
																	"src": "5616:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5616:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5616:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5718:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5729:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5734:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5725:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5725:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5718:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b37f4016ee9ef53bdce1a1464bdafded2ee3b94515ddb78d7b6e31d2218988a0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5511:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5519:3:4",
														"type": ""
													}
												],
												"src": "5377:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5920:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5930:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5942:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5953:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5938:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5938:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5930:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5977:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5988:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5973:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5973:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5996:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6002:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5992:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5992:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5966:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5966:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5966:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6022:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6156:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b37f4016ee9ef53bdce1a1464bdafded2ee3b94515ddb78d7b6e31d2218988a0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6030:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6030:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6022:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b37f4016ee9ef53bdce1a1464bdafded2ee3b94515ddb78d7b6e31d2218988a0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5900:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5915:4:4",
														"type": ""
													}
												],
												"src": "5749:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6202:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6219:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6222:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6212:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6212:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6212:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6316:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6319:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6309:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6309:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6309:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6340:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6343:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6333:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6333:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6333:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6174:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6408:362:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6418:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6441:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6423:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6423:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6418:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6452:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6475:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6457:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6457:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6452:1:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6486:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6509:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6512:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6505:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6505:9:4"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "6490:11:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6523:41:4",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "6552:11:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6534:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6534:30:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "6523:7:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6741:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6743:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6743:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6743:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6674:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6667:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6667:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "6697:1:4"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "6704:7:4"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "6713:1:4"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "6700:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6700:15:4"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "6694:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6694:22:4"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "6647:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6647:83:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6627:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6627:113:4"
															},
															"nodeType": "YulIf",
															"src": "6624:139:4"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6391:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6394:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6400:7:4",
														"type": ""
													}
												],
												"src": "6360:410:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6819:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6876:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6885:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6888:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6878:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6878:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6878:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6842:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6867:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "6849:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6849:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6839:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6839:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6832:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6832:43:4"
															},
															"nodeType": "YulIf",
															"src": "6829:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6812:5:4",
														"type": ""
													}
												],
												"src": "6776:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6967:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6977:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6992:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6986:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6986:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6977:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7035:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7008:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7008:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7008:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6945:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6953:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6961:5:4",
														"type": ""
													}
												],
												"src": "6904:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7130:274:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7176:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7178:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7178:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7178:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7151:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7160:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7147:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7147:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7172:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7143:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7143:32:4"
															},
															"nodeType": "YulIf",
															"src": "7140:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "7269:128:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7284:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7298:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7288:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7313:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7359:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7370:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7355:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7355:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7379:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7323:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7323:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7313:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7100:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7111:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7123:6:4",
														"type": ""
													}
												],
												"src": "7053:351:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7516:117:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7538:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7546:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7534:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7534:14:4"
																	},
																	{
																		"hexValue": "4e6f7420656e6f756768204f50497320696e2062616c616e6365206f66204f70",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7550:34:4",
																		"type": "",
																		"value": "Not enough OPIs in balance of Op"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7527:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7527:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7527:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7606:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7614:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7602:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7602:15:4"
																	},
																	{
																		"hexValue": "69446578",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7619:6:4",
																		"type": "",
																		"value": "iDex"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7595:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7595:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7595:31:4"
														}
													]
												},
												"name": "store_literal_in_memory_c31f9a91e2829dd8ff87fae1d79147031c9a7a6aa8cedf9412897889cacf6a2b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7508:6:4",
														"type": ""
													}
												],
												"src": "7410:223:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7785:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7795:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7861:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7866:2:4",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7802:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7802:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7795:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7967:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c31f9a91e2829dd8ff87fae1d79147031c9a7a6aa8cedf9412897889cacf6a2b",
																	"nodeType": "YulIdentifier",
																	"src": "7878:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7878:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7878:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7980:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7991:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7996:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7987:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7987:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7980:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c31f9a91e2829dd8ff87fae1d79147031c9a7a6aa8cedf9412897889cacf6a2b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7773:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7781:3:4",
														"type": ""
													}
												],
												"src": "7639:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8182:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8192:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8204:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8215:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8200:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8200:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8192:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8239:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8250:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8235:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8235:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8258:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8264:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8254:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8254:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8228:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8228:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8228:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8284:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8418:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c31f9a91e2829dd8ff87fae1d79147031c9a7a6aa8cedf9412897889cacf6a2b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8292:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8292:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8284:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c31f9a91e2829dd8ff87fae1d79147031c9a7a6aa8cedf9412897889cacf6a2b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8162:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8177:4:4",
														"type": ""
													}
												],
												"src": "8011:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8562:206:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8572:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8584:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8595:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8580:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8580:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8572:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8652:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8665:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8676:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8661:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8661:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8608:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8608:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8608:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8733:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8746:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8757:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8742:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8742:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8689:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8689:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8689:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8526:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8538:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8546:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8557:4:4",
														"type": ""
													}
												],
												"src": "8436:332:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8816:48:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8826:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8851:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "8844:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8844:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8837:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8837:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8826:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8798:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8808:7:4",
														"type": ""
													}
												],
												"src": "8774:90:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8910:76:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8964:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8973:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8976:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8966:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8966:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8966:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8933:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8955:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "8940:14:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8940:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8930:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8930:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8923:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8923:40:4"
															},
															"nodeType": "YulIf",
															"src": "8920:60:4"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8903:5:4",
														"type": ""
													}
												],
												"src": "8870:116:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9052:77:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9062:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9077:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9071:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9071:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9062:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9117:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "9093:23:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9093:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9093:30:4"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9030:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9038:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9046:5:4",
														"type": ""
													}
												],
												"src": "8992:137:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9209:271:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9255:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9257:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9257:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9257:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9230:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9239:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9226:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9226:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9251:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9222:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9222:32:4"
															},
															"nodeType": "YulIf",
															"src": "9219:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "9348:125:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9363:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9377:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9367:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9392:71:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9435:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9446:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9431:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9431:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9455:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "9402:28:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9402:61:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9392:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9179:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9190:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9202:6:4",
														"type": ""
													}
												],
												"src": "9135:345:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9592:75:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9614:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9622:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9610:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9610:14:4"
																	},
																	{
																		"hexValue": "4661696c656420746f207472616e73666572204f50497320746f2075736572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9626:33:4",
																		"type": "",
																		"value": "Failed to transfer OPIs to user"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9603:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9603:57:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9603:57:4"
														}
													]
												},
												"name": "store_literal_in_memory_4bcd0a7c3b84d4eacb9dd9f97bfb4fd82d6008c98ec8a5d7b50a883bb6d245ec",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9584:6:4",
														"type": ""
													}
												],
												"src": "9486:181:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9819:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9829:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9895:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9900:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9836:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9836:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9829:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10001:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4bcd0a7c3b84d4eacb9dd9f97bfb4fd82d6008c98ec8a5d7b50a883bb6d245ec",
																	"nodeType": "YulIdentifier",
																	"src": "9912:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9912:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9912:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10014:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10025:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10030:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10021:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10021:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10014:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4bcd0a7c3b84d4eacb9dd9f97bfb4fd82d6008c98ec8a5d7b50a883bb6d245ec_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9807:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9815:3:4",
														"type": ""
													}
												],
												"src": "9673:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10216:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10226:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10238:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10249:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10234:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10234:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10226:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10273:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10284:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10269:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10269:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10292:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10298:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10288:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10288:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10262:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10262:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10262:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10318:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10452:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4bcd0a7c3b84d4eacb9dd9f97bfb4fd82d6008c98ec8a5d7b50a883bb6d245ec_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10326:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10326:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10318:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4bcd0a7c3b84d4eacb9dd9f97bfb4fd82d6008c98ec8a5d7b50a883bb6d245ec__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10196:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10211:4:4",
														"type": ""
													}
												],
												"src": "10045:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10624:288:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10634:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10646:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10657:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10642:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10642:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10634:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10714:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10727:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10738:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10723:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10723:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10670:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10670:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10670:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10795:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10808:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10819:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10804:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10804:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10751:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10751:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10751:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10877:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10890:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10901:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10886:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10886:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10833:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10833:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10833:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10580:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10592:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10600:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10608:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10619:4:4",
														"type": ""
													}
												],
												"src": "10470:442:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11024:119:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11046:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11054:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11042:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11042:14:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11058:34:4",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11035:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11035:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11035:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11114:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11122:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11110:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11110:15:4"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11127:8:4",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11103:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11103:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11103:33:4"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11016:6:4",
														"type": ""
													}
												],
												"src": "10918:225:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11295:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11305:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11371:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11376:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11312:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11312:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11305:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11477:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "11388:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11388:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11388:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11490:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11501:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11506:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11497:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11497:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11490:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11283:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11291:3:4",
														"type": ""
													}
												],
												"src": "11149:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11692:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11702:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11714:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11725:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11710:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11710:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11702:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11749:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11760:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11745:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11745:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11768:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11774:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11764:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11764:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11738:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11738:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11738:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11794:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11928:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11802:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11802:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11794:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11672:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11687:4:4",
														"type": ""
													}
												],
												"src": "11521:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12052:76:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12074:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12082:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12070:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12070:14:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12086:34:4",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12063:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12063:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12063:58:4"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12044:6:4",
														"type": ""
													}
												],
												"src": "11946:182:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12280:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12290:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12356:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12361:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12297:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12297:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12290:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12462:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "12373:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12373:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12373:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12475:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12486:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12491:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12482:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12482:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12475:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12268:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12276:3:4",
														"type": ""
													}
												],
												"src": "12134:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12677:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12687:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12699:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12710:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12695:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12695:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12687:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12734:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12745:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12730:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12730:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12753:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12759:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12749:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12749:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12723:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12723:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12723:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12779:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12913:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12787:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12787:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12779:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12657:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12672:4:4",
														"type": ""
													}
												],
												"src": "12506:419:4"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_458bb05bcea23a525dcd5cd6b64e1afc3b477434a48c45ae9b6e993fdf450e23(memPtr) {\n\n        mstore(add(memPtr, 0), \"OpiDexBalance has nothing to wit\")\n\n        mstore(add(memPtr, 32), \"hdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_458bb05bcea23a525dcd5cd6b64e1afc3b477434a48c45ae9b6e993fdf450e23_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_458bb05bcea23a525dcd5cd6b64e1afc3b477434a48c45ae9b6e993fdf450e23(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_458bb05bcea23a525dcd5cd6b64e1afc3b477434a48c45ae9b6e993fdf450e23__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_458bb05bcea23a525dcd5cd6b64e1afc3b477434a48c45ae9b6e993fdf450e23_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_034c23fc4a277fa80072f8b13e3eeadfea757cbc7447f31e55b75fbcbea2c25d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to withdraw!\")\n\n    }\n\n    function abi_encode_t_stringliteral_034c23fc4a277fa80072f8b13e3eeadfea757cbc7447f31e55b75fbcbea2c25d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_034c23fc4a277fa80072f8b13e3eeadfea757cbc7447f31e55b75fbcbea2c25d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_034c23fc4a277fa80072f8b13e3eeadfea757cbc7447f31e55b75fbcbea2c25d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_034c23fc4a277fa80072f8b13e3eeadfea757cbc7447f31e55b75fbcbea2c25d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b37f4016ee9ef53bdce1a1464bdafded2ee3b94515ddb78d7b6e31d2218988a0(memPtr) {\n\n        mstore(add(memPtr, 0), \"ETH needed to buy OPIs\")\n\n    }\n\n    function abi_encode_t_stringliteral_b37f4016ee9ef53bdce1a1464bdafded2ee3b94515ddb78d7b6e31d2218988a0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_b37f4016ee9ef53bdce1a1464bdafded2ee3b94515ddb78d7b6e31d2218988a0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b37f4016ee9ef53bdce1a1464bdafded2ee3b94515ddb78d7b6e31d2218988a0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b37f4016ee9ef53bdce1a1464bdafded2ee3b94515ddb78d7b6e31d2218988a0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_c31f9a91e2829dd8ff87fae1d79147031c9a7a6aa8cedf9412897889cacf6a2b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough OPIs in balance of Op\")\n\n        mstore(add(memPtr, 32), \"iDex\")\n\n    }\n\n    function abi_encode_t_stringliteral_c31f9a91e2829dd8ff87fae1d79147031c9a7a6aa8cedf9412897889cacf6a2b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c31f9a91e2829dd8ff87fae1d79147031c9a7a6aa8cedf9412897889cacf6a2b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c31f9a91e2829dd8ff87fae1d79147031c9a7a6aa8cedf9412897889cacf6a2b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c31f9a91e2829dd8ff87fae1d79147031c9a7a6aa8cedf9412897889cacf6a2b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_4bcd0a7c3b84d4eacb9dd9f97bfb4fd82d6008c98ec8a5d7b50a883bb6d245ec(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to transfer OPIs to user\")\n\n    }\n\n    function abi_encode_t_stringliteral_4bcd0a7c3b84d4eacb9dd9f97bfb4fd82d6008c98ec8a5d7b50a883bb6d245ec_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_4bcd0a7c3b84d4eacb9dd9f97bfb4fd82d6008c98ec8a5d7b50a883bb6d245ec(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4bcd0a7c3b84d4eacb9dd9f97bfb4fd82d6008c98ec8a5d7b50a883bb6d245ec__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4bcd0a7c3b84d4eacb9dd9f97bfb4fd82d6008c98ec8a5d7b50a883bb6d245ec_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061006f5760003560e01c80638da5cb5b1161004e5780638da5cb5b146100cd578063cbdd69b5146100f8578063d0febe4c14610123578063f2fde38b146101415761006f565b80627c8069146100745780633ccfd60b1461009f578063715018a6146100b6575b600080fd5b34801561008057600080fd5b5061008961016a565b6040516100969190610764565b60405180910390f35b3480156100ab57600080fd5b506100b4610190565b005b3480156100c257600080fd5b506100cb610290565b005b3480156100d957600080fd5b506100e26102a4565b6040516100ef9190610764565b60405180910390f35b34801561010457600080fd5b5061010d6102cd565b60405161011a9190610798565b60405180910390f35b61012b6102d3565b6040516101389190610798565b60405180910390f35b34801561014d57600080fd5b50610168600480360381019061016391906107e4565b610556565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101986105d9565b6000479050600081116101e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d790610894565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff1647604051610206906108e5565b60006040518083038185875af1925050503d8060008114610243576040519150601f19603f3d011682016040523d82523d6000602084013e610248565b606091505b505090508061028c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028390610946565b60405180910390fd5b5050565b6102986105d9565b6102a26000610657565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b6000803411610317576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030e906109b2565b60405180910390fd5b6000600354346103279190610a01565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016103a89190610764565b602060405180830381865afa1580156103c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e99190610a6f565b90508181101561042e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042590610b0e565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b815260040161048d929190610b2e565b6020604051808303816000875af11580156104ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d09190610b8f565b905080610512576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050990610c08565b60405180910390fd5b7f942941e55a29218802e75bce2dab045559e45a25e7030efb9a2c5fe5f5851c4333348560405161054593929190610c28565b60405180910390a182935050505090565b61055e6105d9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c490610cd1565b60405180910390fd5b6105d681610657565b50565b6105e161071b565b73ffffffffffffffffffffffffffffffffffffffff166105ff6102a4565b73ffffffffffffffffffffffffffffffffffffffff1614610655576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064c90610d3d565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061074e82610723565b9050919050565b61075e81610743565b82525050565b60006020820190506107796000830184610755565b92915050565b6000819050919050565b6107928161077f565b82525050565b60006020820190506107ad6000830184610789565b92915050565b600080fd5b6107c181610743565b81146107cc57600080fd5b50565b6000813590506107de816107b8565b92915050565b6000602082840312156107fa576107f96107b3565b5b6000610808848285016107cf565b91505092915050565b600082825260208201905092915050565b7f4f706944657842616c616e636520686173206e6f7468696e6720746f2077697460008201527f6864726177000000000000000000000000000000000000000000000000000000602082015250565b600061087e602583610811565b915061088982610822565b604082019050919050565b600060208201905081810360008301526108ad81610871565b9050919050565b600081905092915050565b50565b60006108cf6000836108b4565b91506108da826108bf565b600082019050919050565b60006108f0826108c2565b9150819050919050565b7f4661696c656420746f2077697468647261772100000000000000000000000000600082015250565b6000610930601383610811565b915061093b826108fa565b602082019050919050565b6000602082019050818103600083015261095f81610923565b9050919050565b7f455448206e656564656420746f20627579204f50497300000000000000000000600082015250565b600061099c601683610811565b91506109a782610966565b602082019050919050565b600060208201905081810360008301526109cb8161098f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a0c8261077f565b9150610a178361077f565b9250828202610a258161077f565b91508282048414831517610a3c57610a3b6109d2565b5b5092915050565b610a4c8161077f565b8114610a5757600080fd5b50565b600081519050610a6981610a43565b92915050565b600060208284031215610a8557610a846107b3565b5b6000610a9384828501610a5a565b91505092915050565b7f4e6f7420656e6f756768204f50497320696e2062616c616e6365206f66204f7060008201527f6944657800000000000000000000000000000000000000000000000000000000602082015250565b6000610af8602483610811565b9150610b0382610a9c565b604082019050919050565b60006020820190508181036000830152610b2781610aeb565b9050919050565b6000604082019050610b436000830185610755565b610b506020830184610789565b9392505050565b60008115159050919050565b610b6c81610b57565b8114610b7757600080fd5b50565b600081519050610b8981610b63565b92915050565b600060208284031215610ba557610ba46107b3565b5b6000610bb384828501610b7a565b91505092915050565b7f4661696c656420746f207472616e73666572204f50497320746f207573657200600082015250565b6000610bf2601f83610811565b9150610bfd82610bbc565b602082019050919050565b60006020820190508181036000830152610c2181610be5565b9050919050565b6000606082019050610c3d6000830186610755565b610c4a6020830185610789565b610c576040830184610789565b949350505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610cbb602683610811565b9150610cc682610c5f565b604082019050919050565b60006020820190508181036000830152610cea81610cae565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610d27602083610811565b9150610d3282610cf1565b602082019050919050565b60006020820190508181036000830152610d5681610d1a565b905091905056fea26469706673582212209f300e27e12a27dbbb3637a92ea9c3a643f82cad22296c31058237b80b54f72f64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xCD JUMPI DUP1 PUSH4 0xCBDD69B5 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0xD0FEBE4C EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x141 JUMPI PUSH2 0x6F JUMP JUMPDEST DUP1 PUSH3 0x7C8069 EQ PUSH2 0x74 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x89 PUSH2 0x16A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB4 PUSH2 0x190 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCB PUSH2 0x290 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE2 PUSH2 0x2A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x2CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x798 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x798 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x168 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x7E4 JUMP JUMPDEST PUSH2 0x556 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x198 PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D7 SWAP1 PUSH2 0x894 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0x206 SWAP1 PUSH2 0x8E5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x243 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x248 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x28C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x283 SWAP1 PUSH2 0x946 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x298 PUSH2 0x5D9 JUMP JUMPDEST PUSH2 0x2A2 PUSH1 0x0 PUSH2 0x657 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLVALUE GT PUSH2 0x317 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30E SWAP1 PUSH2 0x9B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD CALLVALUE PUSH2 0x327 SWAP2 SWAP1 PUSH2 0xA01 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x764 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3E9 SWAP2 SWAP1 PUSH2 0xA6F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x42E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x425 SWAP1 PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48D SWAP3 SWAP2 SWAP1 PUSH2 0xB2E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0xB8F JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x512 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x509 SWAP1 PUSH2 0xC08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x942941E55A29218802E75BCE2DAB045559E45A25E7030EFB9A2C5FE5F5851C43 CALLER CALLVALUE DUP6 PUSH1 0x40 MLOAD PUSH2 0x545 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP3 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x55E PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C4 SWAP1 PUSH2 0xCD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5D6 DUP2 PUSH2 0x657 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x5E1 PUSH2 0x71B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5FF PUSH2 0x2A4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x655 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64C SWAP1 PUSH2 0xD3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74E DUP3 PUSH2 0x723 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x75E DUP2 PUSH2 0x743 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x779 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x755 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x792 DUP2 PUSH2 0x77F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7AD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x789 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7C1 DUP2 PUSH2 0x743 JUMP JUMPDEST DUP2 EQ PUSH2 0x7CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7DE DUP2 PUSH2 0x7B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7FA JUMPI PUSH2 0x7F9 PUSH2 0x7B3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x808 DUP5 DUP3 DUP6 ADD PUSH2 0x7CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F706944657842616C616E636520686173206E6F7468696E6720746F20776974 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6864726177000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87E PUSH1 0x25 DUP4 PUSH2 0x811 JUMP JUMPDEST SWAP2 POP PUSH2 0x889 DUP3 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8AD DUP2 PUSH2 0x871 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8CF PUSH1 0x0 DUP4 PUSH2 0x8B4 JUMP JUMPDEST SWAP2 POP PUSH2 0x8DA DUP3 PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F0 DUP3 PUSH2 0x8C2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661696C656420746F2077697468647261772100000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x930 PUSH1 0x13 DUP4 PUSH2 0x811 JUMP JUMPDEST SWAP2 POP PUSH2 0x93B DUP3 PUSH2 0x8FA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x95F DUP2 PUSH2 0x923 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455448206E656564656420746F20627579204F50497300000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x99C PUSH1 0x16 DUP4 PUSH2 0x811 JUMP JUMPDEST SWAP2 POP PUSH2 0x9A7 DUP3 PUSH2 0x966 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9CB DUP2 PUSH2 0x98F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA0C DUP3 PUSH2 0x77F JUMP JUMPDEST SWAP2 POP PUSH2 0xA17 DUP4 PUSH2 0x77F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xA25 DUP2 PUSH2 0x77F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xA3C JUMPI PUSH2 0xA3B PUSH2 0x9D2 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA4C DUP2 PUSH2 0x77F JUMP JUMPDEST DUP2 EQ PUSH2 0xA57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA69 DUP2 PUSH2 0xA43 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA85 JUMPI PUSH2 0xA84 PUSH2 0x7B3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA93 DUP5 DUP3 DUP6 ADD PUSH2 0xA5A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F756768204F50497320696E2062616C616E6365206F66204F70 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6944657800000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF8 PUSH1 0x24 DUP4 PUSH2 0x811 JUMP JUMPDEST SWAP2 POP PUSH2 0xB03 DUP3 PUSH2 0xA9C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB27 DUP2 PUSH2 0xAEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB43 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x755 JUMP JUMPDEST PUSH2 0xB50 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x789 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6C DUP2 PUSH2 0xB57 JUMP JUMPDEST DUP2 EQ PUSH2 0xB77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB89 DUP2 PUSH2 0xB63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBA5 JUMPI PUSH2 0xBA4 PUSH2 0x7B3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBB3 DUP5 DUP3 DUP6 ADD PUSH2 0xB7A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4661696C656420746F207472616E73666572204F50497320746F207573657200 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF2 PUSH1 0x1F DUP4 PUSH2 0x811 JUMP JUMPDEST SWAP2 POP PUSH2 0xBFD DUP3 PUSH2 0xBBC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC21 DUP2 PUSH2 0xBE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xC3D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x755 JUMP JUMPDEST PUSH2 0xC4A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x789 JUMP JUMPDEST PUSH2 0xC57 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x789 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBB PUSH1 0x26 DUP4 PUSH2 0x811 JUMP JUMPDEST SWAP2 POP PUSH2 0xCC6 DUP3 PUSH2 0xC5F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCEA DUP2 PUSH2 0xCAE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD27 PUSH1 0x20 DUP4 PUSH2 0x811 JUMP JUMPDEST SWAP2 POP PUSH2 0xD32 DUP3 PUSH2 0xCF1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD56 DUP2 PUSH2 0xD1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 ADDRESS 0xE 0x27 0xE1 0x2A 0x27 0xDB 0xBB CALLDATASIZE CALLDATACOPY 0xA9 0x2E 0xA9 0xC3 0xA6 NUMBER 0xF8 0x2C 0xAD 0x22 0x29 PUSH13 0x31058237B80B54F72F64736F6C PUSH4 0x43000811 STOP CALLER ",
							"sourceMap": "172:1815:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;221:33;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1687:298;;;;;;;;;;;;;:::i;:::-;;1831:101:0;;;;;;;;;;;;;:::i;:::-;;1201:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;284:32:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;680:922;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;221:33:3;;;;;;;;;;;;;:::o;1687:298::-;1094:13:0;:11;:13::i;:::-;1734:21:3::1;1758;1734:45;;1813:1;1797:13;:17;1789:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1868:9;1883:10;:15;;1906:21;1883:49;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1867:65;;;1950:4;1942:36;;;;;;;;;;;;:::i;:::-;;;;;;;;;1724:261;;1687:298::o:0;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;284:32:3:-;;;;:::o;680:922::-;725:19;776:1;764:9;:13;756:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;815:19;849:12;;837:9;:24;;;;:::i;:::-;815:46;;960:21;984:3;;;;;;;;;;;:13;;;998:18;;;;;;;;;;;984:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;960:57;;1065:11;1048:13;:28;;1027:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;1193:9;1205:3;;;;;;;;;;;:12;;;1218:10;1230:11;1205:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1193:49;;1440:4;1432:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;1522:44;1531:10;1543:9;1554:11;1522:44;;;;;;;;:::i;:::-;;;;;;;;1584:11;1577:18;;;;;680:922;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;7:126:4:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:77::-;630:7;659:5;648:16;;593:77;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:222::-;893:4;931:2;920:9;916:18;908:26;;944:71;1012:1;1001:9;997:17;988:6;944:71;:::i;:::-;800:222;;;;:::o;1109:117::-;1218:1;1215;1208:12;1355:122;1428:24;1446:5;1428:24;:::i;:::-;1421:5;1418:35;1408:63;;1467:1;1464;1457:12;1408:63;1355:122;:::o;1483:139::-;1529:5;1567:6;1554:20;1545:29;;1583:33;1610:5;1583:33;:::i;:::-;1483:139;;;;:::o;1628:329::-;1687:6;1736:2;1724:9;1715:7;1711:23;1707:32;1704:119;;;1742:79;;:::i;:::-;1704:119;1862:1;1887:53;1932:7;1923:6;1912:9;1908:22;1887:53;:::i;:::-;1877:63;;1833:117;1628:329;;;;:::o;1963:169::-;2047:11;2081:6;2076:3;2069:19;2121:4;2116:3;2112:14;2097:29;;1963:169;;;;:::o;2138:224::-;2278:34;2274:1;2266:6;2262:14;2255:58;2347:7;2342:2;2334:6;2330:15;2323:32;2138:224;:::o;2368:366::-;2510:3;2531:67;2595:2;2590:3;2531:67;:::i;:::-;2524:74;;2607:93;2696:3;2607:93;:::i;:::-;2725:2;2720:3;2716:12;2709:19;;2368:366;;;:::o;2740:419::-;2906:4;2944:2;2933:9;2929:18;2921:26;;2993:9;2987:4;2983:20;2979:1;2968:9;2964:17;2957:47;3021:131;3147:4;3021:131;:::i;:::-;3013:139;;2740:419;;;:::o;3165:147::-;3266:11;3303:3;3288:18;;3165:147;;;;:::o;3318:114::-;;:::o;3438:398::-;3597:3;3618:83;3699:1;3694:3;3618:83;:::i;:::-;3611:90;;3710:93;3799:3;3710:93;:::i;:::-;3828:1;3823:3;3819:11;3812:18;;3438:398;;;:::o;3842:379::-;4026:3;4048:147;4191:3;4048:147;:::i;:::-;4041:154;;4212:3;4205:10;;3842:379;;;:::o;4227:169::-;4367:21;4363:1;4355:6;4351:14;4344:45;4227:169;:::o;4402:366::-;4544:3;4565:67;4629:2;4624:3;4565:67;:::i;:::-;4558:74;;4641:93;4730:3;4641:93;:::i;:::-;4759:2;4754:3;4750:12;4743:19;;4402:366;;;:::o;4774:419::-;4940:4;4978:2;4967:9;4963:18;4955:26;;5027:9;5021:4;5017:20;5013:1;5002:9;4998:17;4991:47;5055:131;5181:4;5055:131;:::i;:::-;5047:139;;4774:419;;;:::o;5199:172::-;5339:24;5335:1;5327:6;5323:14;5316:48;5199:172;:::o;5377:366::-;5519:3;5540:67;5604:2;5599:3;5540:67;:::i;:::-;5533:74;;5616:93;5705:3;5616:93;:::i;:::-;5734:2;5729:3;5725:12;5718:19;;5377:366;;;:::o;5749:419::-;5915:4;5953:2;5942:9;5938:18;5930:26;;6002:9;5996:4;5992:20;5988:1;5977:9;5973:17;5966:47;6030:131;6156:4;6030:131;:::i;:::-;6022:139;;5749:419;;;:::o;6174:180::-;6222:77;6219:1;6212:88;6319:4;6316:1;6309:15;6343:4;6340:1;6333:15;6360:410;6400:7;6423:20;6441:1;6423:20;:::i;:::-;6418:25;;6457:20;6475:1;6457:20;:::i;:::-;6452:25;;6512:1;6509;6505:9;6534:30;6552:11;6534:30;:::i;:::-;6523:41;;6713:1;6704:7;6700:15;6697:1;6694:22;6674:1;6667:9;6647:83;6624:139;;6743:18;;:::i;:::-;6624:139;6408:362;6360:410;;;;:::o;6776:122::-;6849:24;6867:5;6849:24;:::i;:::-;6842:5;6839:35;6829:63;;6888:1;6885;6878:12;6829:63;6776:122;:::o;6904:143::-;6961:5;6992:6;6986:13;6977:22;;7008:33;7035:5;7008:33;:::i;:::-;6904:143;;;;:::o;7053:351::-;7123:6;7172:2;7160:9;7151:7;7147:23;7143:32;7140:119;;;7178:79;;:::i;:::-;7140:119;7298:1;7323:64;7379:7;7370:6;7359:9;7355:22;7323:64;:::i;:::-;7313:74;;7269:128;7053:351;;;;:::o;7410:223::-;7550:34;7546:1;7538:6;7534:14;7527:58;7619:6;7614:2;7606:6;7602:15;7595:31;7410:223;:::o;7639:366::-;7781:3;7802:67;7866:2;7861:3;7802:67;:::i;:::-;7795:74;;7878:93;7967:3;7878:93;:::i;:::-;7996:2;7991:3;7987:12;7980:19;;7639:366;;;:::o;8011:419::-;8177:4;8215:2;8204:9;8200:18;8192:26;;8264:9;8258:4;8254:20;8250:1;8239:9;8235:17;8228:47;8292:131;8418:4;8292:131;:::i;:::-;8284:139;;8011:419;;;:::o;8436:332::-;8557:4;8595:2;8584:9;8580:18;8572:26;;8608:71;8676:1;8665:9;8661:17;8652:6;8608:71;:::i;:::-;8689:72;8757:2;8746:9;8742:18;8733:6;8689:72;:::i;:::-;8436:332;;;;;:::o;8774:90::-;8808:7;8851:5;8844:13;8837:21;8826:32;;8774:90;;;:::o;8870:116::-;8940:21;8955:5;8940:21;:::i;:::-;8933:5;8930:32;8920:60;;8976:1;8973;8966:12;8920:60;8870:116;:::o;8992:137::-;9046:5;9077:6;9071:13;9062:22;;9093:30;9117:5;9093:30;:::i;:::-;8992:137;;;;:::o;9135:345::-;9202:6;9251:2;9239:9;9230:7;9226:23;9222:32;9219:119;;;9257:79;;:::i;:::-;9219:119;9377:1;9402:61;9455:7;9446:6;9435:9;9431:22;9402:61;:::i;:::-;9392:71;;9348:125;9135:345;;;;:::o;9486:181::-;9626:33;9622:1;9614:6;9610:14;9603:57;9486:181;:::o;9673:366::-;9815:3;9836:67;9900:2;9895:3;9836:67;:::i;:::-;9829:74;;9912:93;10001:3;9912:93;:::i;:::-;10030:2;10025:3;10021:12;10014:19;;9673:366;;;:::o;10045:419::-;10211:4;10249:2;10238:9;10234:18;10226:26;;10298:9;10292:4;10288:20;10284:1;10273:9;10269:17;10262:47;10326:131;10452:4;10326:131;:::i;:::-;10318:139;;10045:419;;;:::o;10470:442::-;10619:4;10657:2;10646:9;10642:18;10634:26;;10670:71;10738:1;10727:9;10723:17;10714:6;10670:71;:::i;:::-;10751:72;10819:2;10808:9;10804:18;10795:6;10751:72;:::i;:::-;10833;10901:2;10890:9;10886:18;10877:6;10833:72;:::i;:::-;10470:442;;;;;;:::o;10918:225::-;11058:34;11054:1;11046:6;11042:14;11035:58;11127:8;11122:2;11114:6;11110:15;11103:33;10918:225;:::o;11149:366::-;11291:3;11312:67;11376:2;11371:3;11312:67;:::i;:::-;11305:74;;11388:93;11477:3;11388:93;:::i;:::-;11506:2;11501:3;11497:12;11490:19;;11149:366;;;:::o;11521:419::-;11687:4;11725:2;11714:9;11710:18;11702:26;;11774:9;11768:4;11764:20;11760:1;11749:9;11745:17;11738:47;11802:131;11928:4;11802:131;:::i;:::-;11794:139;;11521:419;;;:::o;11946:182::-;12086:34;12082:1;12074:6;12070:14;12063:58;11946:182;:::o;12134:366::-;12276:3;12297:67;12361:2;12356:3;12297:67;:::i;:::-;12290:74;;12373:93;12462:3;12373:93;:::i;:::-;12491:2;12486:3;12482:12;12475:19;;12134:366;;;:::o;12506:419::-;12672:4;12710:2;12699:9;12695:18;12687:26;;12759:9;12753:4;12749:20;12745:1;12734:9;12730:17;12723:47;12787:131;12913:4;12787:131;:::i;:::-;12779:139;;12506:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "695000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"buyTokens()": "infinite",
								"opiContractAddress()": "2515",
								"owner()": "2522",
								"renounceOwnership()": "30443",
								"tokensPerEth()": "2451",
								"transferOwnership(address)": "30810",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 172,
									"end": 1987,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 172,
									"end": 1987,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 172,
									"end": 1987,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 314,
									"end": 316,
									"name": "PUSH",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 284,
									"end": 316,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 284,
									"end": 316,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 444,
									"end": 607,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 444,
									"end": 607,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 444,
									"end": 607,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 444,
									"end": 607,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 444,
									"end": 607,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 444,
									"end": 607,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 444,
									"end": 607,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 444,
									"end": 607,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 444,
									"end": 607,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 444,
									"end": 607,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 444,
									"end": 607,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 444,
									"end": 607,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 444,
									"end": 607,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 444,
									"end": 607,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 444,
									"end": 607,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 444,
									"end": 607,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 444,
									"end": 607,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 444,
									"end": 607,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 444,
									"end": 607,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 444,
									"end": 607,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 444,
									"end": 607,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 444,
									"end": 607,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 444,
									"end": 607,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 444,
									"end": 607,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 444,
									"end": 607,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 444,
									"end": 607,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 444,
									"end": 607,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 444,
									"end": 607,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 444,
									"end": 607,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 444,
									"end": 607,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 444,
									"end": 607,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 444,
									"end": 607,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 444,
									"end": 607,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 444,
									"end": 607,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 444,
									"end": 607,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 500,
									"end": 511,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 487,
									"end": 490,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 487,
									"end": 490,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 487,
									"end": 512,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 487,
									"end": 512,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 487,
									"end": 512,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 487,
									"end": 512,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 487,
									"end": 512,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 487,
									"end": 512,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 487,
									"end": 512,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 487,
									"end": 512,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 487,
									"end": 512,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 487,
									"end": 512,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 487,
									"end": 512,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 487,
									"end": 512,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 487,
									"end": 512,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 487,
									"end": 512,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 487,
									"end": 512,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 487,
									"end": 512,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 487,
									"end": 512,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 487,
									"end": 512,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 543,
									"end": 554,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 522,
									"end": 540,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 522,
									"end": 540,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 522,
									"end": 554,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 522,
									"end": 554,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 522,
									"end": 554,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 522,
									"end": 554,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 522,
									"end": 554,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 522,
									"end": 554,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 522,
									"end": 554,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 522,
									"end": 554,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 522,
									"end": 554,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 522,
									"end": 554,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 522,
									"end": 554,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 522,
									"end": 554,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 522,
									"end": 554,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 522,
									"end": 554,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 522,
									"end": 554,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 522,
									"end": 554,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 522,
									"end": 554,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 522,
									"end": 554,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 444,
									"end": 607,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 172,
									"end": 1987,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 172,
									"end": 1987,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 172,
									"end": 1987,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 172,
									"end": 1987,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 172,
									"end": 1987,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 172,
									"end": 1987,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 172,
									"end": 1987,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 172,
									"end": 1987,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 172,
									"end": 1987,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 172,
									"end": 1987,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 172,
									"end": 1987,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209f300e27e12a27dbbb3637a92ea9c3a643f82cad22296c31058237b80b54f72f64736f6c63430008110033",
									".code": [
										{
											"begin": 172,
											"end": 1987,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "PUSH",
											"source": 3,
											"value": "CBDD69B5"
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "PUSH",
											"source": 3,
											"value": "D0FEBE4C"
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "PUSH",
											"source": 3,
											"value": "7C8069"
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "PUSH",
											"source": 3,
											"value": "3CCFD60B"
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 172,
											"end": 1987,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 221,
											"end": 254,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 221,
											"end": 254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 221,
											"end": 254,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 221,
											"end": 254,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 221,
											"end": 254,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 221,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 221,
											"end": 254,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 221,
											"end": 254,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 221,
											"end": 254,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 221,
											"end": 254,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 221,
											"end": 254,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 221,
											"end": 254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 221,
											"end": 254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 221,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 221,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 221,
											"end": 254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 221,
											"end": 254,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 221,
											"end": 254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 221,
											"end": 254,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 221,
											"end": 254,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 221,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 221,
											"end": 254,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 221,
											"end": 254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 221,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 221,
											"end": 254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 221,
											"end": 254,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 221,
											"end": 254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 221,
											"end": 254,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 221,
											"end": 254,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 221,
											"end": 254,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 221,
											"end": 254,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 221,
											"end": 254,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 221,
											"end": 254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 221,
											"end": 254,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1687,
											"end": 1985,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1687,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1687,
											"end": 1985,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1687,
											"end": 1985,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1687,
											"end": 1985,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1687,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1687,
											"end": 1985,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1687,
											"end": 1985,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1687,
											"end": 1985,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1687,
											"end": 1985,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1687,
											"end": 1985,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1687,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1687,
											"end": 1985,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1687,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1687,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1687,
											"end": 1985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1687,
											"end": 1985,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1687,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1687,
											"end": 1985,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 284,
											"end": 316,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 284,
											"end": 316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 284,
											"end": 316,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 284,
											"end": 316,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 284,
											"end": 316,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 284,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 284,
											"end": 316,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 284,
											"end": 316,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 284,
											"end": 316,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 284,
											"end": 316,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 284,
											"end": 316,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 284,
											"end": 316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 284,
											"end": 316,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 284,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 284,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 284,
											"end": 316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 284,
											"end": 316,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 284,
											"end": 316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 284,
											"end": 316,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 284,
											"end": 316,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 284,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 284,
											"end": 316,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 284,
											"end": 316,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 284,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 284,
											"end": 316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 284,
											"end": 316,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 284,
											"end": 316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 284,
											"end": 316,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 284,
											"end": 316,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 284,
											"end": 316,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 284,
											"end": 316,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 284,
											"end": 316,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 284,
											"end": 316,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 284,
											"end": 316,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1602,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 680,
											"end": 1602,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1602,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 680,
											"end": 1602,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 680,
											"end": 1602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1602,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 680,
											"end": 1602,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1602,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 1602,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1602,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 680,
											"end": 1602,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1602,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1602,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 680,
											"end": 1602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1602,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 680,
											"end": 1602,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1602,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 1602,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1602,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1602,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1602,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1602,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1602,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 221,
											"end": 254,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 221,
											"end": 254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 221,
											"end": 254,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 221,
											"end": 254,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 221,
											"end": 254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 221,
											"end": 254,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 221,
											"end": 254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 221,
											"end": 254,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 221,
											"end": 254,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 221,
											"end": 254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 221,
											"end": 254,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 221,
											"end": 254,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 221,
											"end": 254,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 221,
											"end": 254,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 221,
											"end": 254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1687,
											"end": 1985,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1687,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1734,
											"end": 1755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1758,
											"end": 1779,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 1734,
											"end": 1779,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1734,
											"end": 1779,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1813,
											"end": 1814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 1810,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1814,
											"modifierDepth": 1,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1789,
											"end": 1856,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1789,
											"end": 1856,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1789,
											"end": 1856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1789,
											"end": 1856,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1789,
											"end": 1856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1789,
											"end": 1856,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1789,
											"end": 1856,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1789,
											"end": 1856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1789,
											"end": 1856,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1789,
											"end": 1856,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1789,
											"end": 1856,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1789,
											"end": 1856,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1789,
											"end": 1856,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1789,
											"end": 1856,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1789,
											"end": 1856,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1789,
											"end": 1856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1789,
											"end": 1856,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1789,
											"end": 1856,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1789,
											"end": 1856,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1789,
											"end": 1856,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1789,
											"end": 1856,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1789,
											"end": 1856,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1789,
											"end": 1856,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1789,
											"end": 1856,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1883,
											"end": 1893,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1883,
											"end": 1898,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 1927,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1883,
											"end": 1932,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1932,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1867,
											"end": 1932,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1867,
											"end": 1932,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1867,
											"end": 1932,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 1954,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1978,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1942,
											"end": 1978,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1942,
											"end": 1978,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1942,
											"end": 1978,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1978,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1942,
											"end": 1978,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1978,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1942,
											"end": 1978,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1978,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1942,
											"end": 1978,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1978,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1942,
											"end": 1978,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1942,
											"end": 1978,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1978,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1978,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1978,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1978,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1978,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1978,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1942,
											"end": 1978,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1724,
											"end": 1985,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1724,
											"end": 1985,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1687,
											"end": 1985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 284,
											"end": 316,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 284,
											"end": 316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 284,
											"end": 316,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 284,
											"end": 316,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 284,
											"end": 316,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 284,
											"end": 316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1602,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 680,
											"end": 1602,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 725,
											"end": 744,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 777,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 764,
											"end": 773,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 764,
											"end": 777,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 756,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 756,
											"end": 804,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 756,
											"end": 804,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 756,
											"end": 804,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 756,
											"end": 804,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 756,
											"end": 804,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 756,
											"end": 804,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 756,
											"end": 804,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 756,
											"end": 804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 756,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 756,
											"end": 804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 756,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 756,
											"end": 804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 756,
											"end": 804,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 756,
											"end": 804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 756,
											"end": 804,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 756,
											"end": 804,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 756,
											"end": 804,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 756,
											"end": 804,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 756,
											"end": 804,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 756,
											"end": 804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 756,
											"end": 804,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 756,
											"end": 804,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 756,
											"end": 804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 815,
											"end": 834,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 849,
											"end": 861,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 849,
											"end": 861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 837,
											"end": 846,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 837,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 837,
											"end": 861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 837,
											"end": 861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 837,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 837,
											"end": 861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 837,
											"end": 861,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 837,
											"end": 861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 815,
											"end": 861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 815,
											"end": 861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 960,
											"end": 981,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 984,
											"end": 987,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 984,
											"end": 987,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 984,
											"end": 987,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 984,
											"end": 987,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 984,
											"end": 987,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 984,
											"end": 987,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 984,
											"end": 987,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 984,
											"end": 987,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 984,
											"end": 987,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 984,
											"end": 987,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 984,
											"end": 987,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 984,
											"end": 997,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 984,
											"end": 997,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 984,
											"end": 997,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 998,
											"end": 1016,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 998,
											"end": 1016,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 998,
											"end": 1016,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 998,
											"end": 1016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 998,
											"end": 1016,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 998,
											"end": 1016,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 998,
											"end": 1016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 998,
											"end": 1016,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 998,
											"end": 1016,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 998,
											"end": 1016,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 984,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 984,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 960,
											"end": 1017,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 960,
											"end": 1017,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1065,
											"end": 1076,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1048,
											"end": 1061,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1048,
											"end": 1076,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1048,
											"end": 1076,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1027,
											"end": 1138,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1138,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1027,
											"end": 1138,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1138,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1027,
											"end": 1138,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1138,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1138,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1027,
											"end": 1138,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1027,
											"end": 1138,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1027,
											"end": 1138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1138,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1027,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1138,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1027,
											"end": 1138,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1138,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1138,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1138,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1138,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1138,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1138,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1027,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1193,
											"end": 1202,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1208,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1205,
											"end": 1208,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1208,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1208,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1208,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1208,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1205,
											"end": 1208,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1208,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1208,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1208,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1205,
											"end": 1208,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1217,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1205,
											"end": 1217,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1217,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1218,
											"end": 1228,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1205,
											"end": 1242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1205,
											"end": 1242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1193,
											"end": 1242,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1193,
											"end": 1242,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1440,
											"end": 1444,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1432,
											"end": 1480,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1480,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1432,
											"end": 1480,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1480,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1432,
											"end": 1480,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1480,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1480,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1432,
											"end": 1480,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1432,
											"end": 1480,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1432,
											"end": 1480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1480,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1432,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1480,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1432,
											"end": 1480,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1480,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1480,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1480,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1480,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1480,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1480,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1432,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1566,
											"name": "PUSH",
											"source": 3,
											"value": "942941E55A29218802E75BCE2DAB045559E45A25E7030EFB9A2C5FE5F5851C43"
										},
										{
											"begin": 1531,
											"end": 1541,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1554,
											"end": 1565,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1566,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1522,
											"end": 1566,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1522,
											"end": 1566,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1566,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1566,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1522,
											"end": 1566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1566,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1522,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1566,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1522,
											"end": 1566,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1566,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1566,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1566,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1566,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 1584,
											"end": 1595,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1577,
											"end": 1595,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1577,
											"end": 1595,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1577,
											"end": 1595,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1577,
											"end": 1595,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1577,
											"end": 1595,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1602,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 680,
											"end": 1602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2161,
											"end": 2234,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 593,
											"end": 670,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 593,
											"end": 670,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 630,
											"end": 637,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 648,
											"end": 664,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 648,
											"end": 664,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 593,
											"end": 670,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 593,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 676,
											"end": 794,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 676,
											"end": 794,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 763,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 763,
											"end": 787,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 758,
											"end": 761,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 751,
											"end": 788,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 676,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 916,
											"end": 934,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 908,
											"end": 934,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 908,
											"end": 934,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 944,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 800,
											"end": 1022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1220,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 1446,
											"end": 1451,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1428,
											"end": 1452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1421,
											"end": 1426,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1418,
											"end": 1453,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1468,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 1465,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1469,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1355,
											"end": 1477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1529,
											"end": 1534,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1567,
											"end": 1573,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1554,
											"end": 1574,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 1610,
											"end": 1615,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1583,
											"end": 1616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1483,
											"end": 1622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1687,
											"end": 1693,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1736,
											"end": 1738,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1724,
											"end": 1733,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1711,
											"end": 1734,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1739,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1742,
											"end": 1821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1862,
											"end": 1863,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 1932,
											"end": 1939,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 1921,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1908,
											"end": 1930,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1887,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1940,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1940,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1628,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2047,
											"end": 2058,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2087,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2076,
											"end": 2079,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2069,
											"end": 2088,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2121,
											"end": 2125,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2116,
											"end": 2119,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2112,
											"end": 2126,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2097,
											"end": 2126,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2097,
											"end": 2126,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 2132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2138,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2278,
											"end": 2312,
											"name": "PUSH",
											"source": 4,
											"value": "4F706944657842616C616E636520686173206E6F7468696E6720746F20776974"
										},
										{
											"begin": 2274,
											"end": 2275,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2266,
											"end": 2272,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2276,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2255,
											"end": 2313,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2347,
											"end": 2354,
											"name": "PUSH",
											"source": 4,
											"value": "6864726177000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2342,
											"end": 2344,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2334,
											"end": 2340,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2330,
											"end": 2345,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2323,
											"end": 2355,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2368,
											"end": 2734,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2368,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2510,
											"end": 2513,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2531,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 2595,
											"end": 2597,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2590,
											"end": 2593,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2531,
											"end": 2598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2598,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 2531,
											"end": 2598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2524,
											"end": 2598,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2524,
											"end": 2598,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2607,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2696,
											"end": 2699,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2607,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2607,
											"end": 2700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2607,
											"end": 2700,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2607,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2725,
											"end": 2727,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2720,
											"end": 2723,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2728,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2728,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2728,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2368,
											"end": 2734,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2368,
											"end": 2734,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2368,
											"end": 2734,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2368,
											"end": 2734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2740,
											"end": 3159,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2740,
											"end": 3159,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2906,
											"end": 2910,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2944,
											"end": 2946,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2933,
											"end": 2942,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2947,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2921,
											"end": 2947,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2921,
											"end": 2947,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2993,
											"end": 3002,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2987,
											"end": 2991,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2983,
											"end": 3003,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2979,
											"end": 2980,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2964,
											"end": 2981,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 3004,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3152,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 3147,
											"end": 3151,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3152,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3021,
											"end": 3152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3152,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 3021,
											"end": 3152,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3013,
											"end": 3152,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3013,
											"end": 3152,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2740,
											"end": 3159,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2740,
											"end": 3159,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2740,
											"end": 3159,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2740,
											"end": 3159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3165,
											"end": 3312,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 3165,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3266,
											"end": 3277,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3303,
											"end": 3306,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3288,
											"end": 3306,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3288,
											"end": 3306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3165,
											"end": 3312,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3165,
											"end": 3312,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3165,
											"end": 3312,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3165,
											"end": 3312,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3165,
											"end": 3312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3318,
											"end": 3432,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 3318,
											"end": 3432,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3318,
											"end": 3432,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3318,
											"end": 3432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3836,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 3438,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 3600,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3618,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 3699,
											"end": 3700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3694,
											"end": 3697,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3618,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 3618,
											"end": 3701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3618,
											"end": 3701,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 3618,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3611,
											"end": 3701,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3611,
											"end": 3701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3710,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 3799,
											"end": 3802,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3710,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 3710,
											"end": 3803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3710,
											"end": 3803,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 3710,
											"end": 3803,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3828,
											"end": 3829,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3823,
											"end": 3826,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3819,
											"end": 3830,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3812,
											"end": 3830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3812,
											"end": 3830,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3836,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3836,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3836,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3842,
											"end": 4221,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3842,
											"end": 4221,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4026,
											"end": 4029,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4048,
											"end": 4195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 4191,
											"end": 4194,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4048,
											"end": 4195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 4048,
											"end": 4195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4048,
											"end": 4195,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 4048,
											"end": 4195,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4041,
											"end": 4195,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4041,
											"end": 4195,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4212,
											"end": 4215,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4205,
											"end": 4215,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4205,
											"end": 4215,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3842,
											"end": 4221,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3842,
											"end": 4221,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3842,
											"end": 4221,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3842,
											"end": 4221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4227,
											"end": 4396,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 4227,
											"end": 4396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4367,
											"end": 4388,
											"name": "PUSH",
											"source": 4,
											"value": "4661696C656420746F2077697468647261772100000000000000000000000000"
										},
										{
											"begin": 4363,
											"end": 4364,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4355,
											"end": 4361,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4365,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4344,
											"end": 4389,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4227,
											"end": 4396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4227,
											"end": 4396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4402,
											"end": 4768,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 4402,
											"end": 4768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4544,
											"end": 4547,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4565,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 4629,
											"end": 4631,
											"name": "PUSH",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 4624,
											"end": 4627,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 4565,
											"end": 4632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 4632,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 4565,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4558,
											"end": 4632,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4558,
											"end": 4632,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4641,
											"end": 4734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 4730,
											"end": 4733,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4641,
											"end": 4734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 4641,
											"end": 4734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4641,
											"end": 4734,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 4641,
											"end": 4734,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4761,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4754,
											"end": 4757,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4750,
											"end": 4762,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4743,
											"end": 4762,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4743,
											"end": 4762,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4402,
											"end": 4768,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4402,
											"end": 4768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4402,
											"end": 4768,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4402,
											"end": 4768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4774,
											"end": 5193,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4774,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4940,
											"end": 4944,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4978,
											"end": 4980,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4967,
											"end": 4976,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 4981,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4955,
											"end": 4981,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4955,
											"end": 4981,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5027,
											"end": 5036,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5021,
											"end": 5025,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5037,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5002,
											"end": 5011,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5015,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4991,
											"end": 5038,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5055,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5055,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 5055,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5055,
											"end": 5186,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 5055,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5047,
											"end": 5186,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5047,
											"end": 5186,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4774,
											"end": 5193,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4774,
											"end": 5193,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4774,
											"end": 5193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4774,
											"end": 5193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5199,
											"end": 5371,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 5199,
											"end": 5371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5339,
											"end": 5363,
											"name": "PUSH",
											"source": 4,
											"value": "455448206E656564656420746F20627579204F50497300000000000000000000"
										},
										{
											"begin": 5335,
											"end": 5336,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5327,
											"end": 5333,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5323,
											"end": 5337,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5316,
											"end": 5364,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5199,
											"end": 5371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5199,
											"end": 5371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5377,
											"end": 5743,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 5377,
											"end": 5743,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5519,
											"end": 5522,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5540,
											"end": 5607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 5604,
											"end": 5606,
											"name": "PUSH",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 5599,
											"end": 5602,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5540,
											"end": 5607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 5540,
											"end": 5607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5540,
											"end": 5607,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 5540,
											"end": 5607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5533,
											"end": 5607,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5533,
											"end": 5607,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 5705,
											"end": 5708,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 5616,
											"end": 5709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5709,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 5616,
											"end": 5709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5734,
											"end": 5736,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5729,
											"end": 5732,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5737,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5718,
											"end": 5737,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5718,
											"end": 5737,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5377,
											"end": 5743,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5377,
											"end": 5743,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5377,
											"end": 5743,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5377,
											"end": 5743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5749,
											"end": 6168,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 5749,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5915,
											"end": 5919,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5953,
											"end": 5955,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5951,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 5956,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5930,
											"end": 5956,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5930,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6002,
											"end": 6011,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5996,
											"end": 6000,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5992,
											"end": 6012,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 5989,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5977,
											"end": 5986,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5973,
											"end": 5990,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5966,
											"end": 6013,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6030,
											"end": 6161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 6156,
											"end": 6160,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6030,
											"end": 6161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 6030,
											"end": 6161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6030,
											"end": 6161,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 6030,
											"end": 6161,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6161,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6161,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5749,
											"end": 6168,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5749,
											"end": 6168,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5749,
											"end": 6168,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5749,
											"end": 6168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6174,
											"end": 6354,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 6174,
											"end": 6354,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6222,
											"end": 6299,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6219,
											"end": 6220,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6212,
											"end": 6300,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6319,
											"end": 6323,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 6316,
											"end": 6317,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6309,
											"end": 6324,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6343,
											"end": 6347,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6340,
											"end": 6341,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6333,
											"end": 6348,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6770,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 6360,
											"end": 6770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6400,
											"end": 6407,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6423,
											"end": 6443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 6441,
											"end": 6442,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6423,
											"end": 6443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 6423,
											"end": 6443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6423,
											"end": 6443,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 6423,
											"end": 6443,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6418,
											"end": 6443,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6418,
											"end": 6443,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6457,
											"end": 6477,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 6475,
											"end": 6476,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6457,
											"end": 6477,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 6457,
											"end": 6477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6457,
											"end": 6477,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 6457,
											"end": 6477,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6452,
											"end": 6477,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6452,
											"end": 6477,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6512,
											"end": 6513,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6509,
											"end": 6510,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6505,
											"end": 6514,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 6534,
											"end": 6564,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 6552,
											"end": 6563,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6534,
											"end": 6564,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 6534,
											"end": 6564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6534,
											"end": 6564,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 6534,
											"end": 6564,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6523,
											"end": 6564,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6523,
											"end": 6564,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6713,
											"end": 6714,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6704,
											"end": 6711,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6700,
											"end": 6715,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 6697,
											"end": 6698,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6694,
											"end": 6716,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6675,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6667,
											"end": 6676,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6730,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 6624,
											"end": 6763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 6624,
											"end": 6763,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6743,
											"end": 6761,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 6743,
											"end": 6761,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 6743,
											"end": 6761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6743,
											"end": 6761,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 6743,
											"end": 6761,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6624,
											"end": 6763,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 6624,
											"end": 6763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6408,
											"end": 6770,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6770,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6770,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6770,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6770,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6776,
											"end": 6898,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 6776,
											"end": 6898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6849,
											"end": 6873,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 6867,
											"end": 6872,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6849,
											"end": 6873,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 6849,
											"end": 6873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6849,
											"end": 6873,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 6849,
											"end": 6873,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6842,
											"end": 6847,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6839,
											"end": 6874,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6829,
											"end": 6892,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 6829,
											"end": 6892,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6888,
											"end": 6889,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6885,
											"end": 6886,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6878,
											"end": 6890,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6829,
											"end": 6892,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 6829,
											"end": 6892,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6776,
											"end": 6898,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6776,
											"end": 6898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6904,
											"end": 7047,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 6904,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6961,
											"end": 6966,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6992,
											"end": 6998,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6986,
											"end": 6999,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6977,
											"end": 6999,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6977,
											"end": 6999,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7008,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 7035,
											"end": 7040,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7008,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 7008,
											"end": 7041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7008,
											"end": 7041,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 7008,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6904,
											"end": 7047,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6904,
											"end": 7047,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6904,
											"end": 7047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6904,
											"end": 7047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6904,
											"end": 7047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7053,
											"end": 7404,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 7053,
											"end": 7404,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7123,
											"end": 7129,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7172,
											"end": 7174,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7160,
											"end": 7169,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7151,
											"end": 7158,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7147,
											"end": 7170,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7143,
											"end": 7175,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 7140,
											"end": 7259,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7140,
											"end": 7259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 7140,
											"end": 7259,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7178,
											"end": 7257,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 7178,
											"end": 7257,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 7178,
											"end": 7257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7178,
											"end": 7257,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 7178,
											"end": 7257,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7140,
											"end": 7259,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 7140,
											"end": 7259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7299,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7323,
											"end": 7387,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 7379,
											"end": 7386,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7370,
											"end": 7376,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7359,
											"end": 7368,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7355,
											"end": 7377,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7323,
											"end": 7387,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 7323,
											"end": 7387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7323,
											"end": 7387,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 7323,
											"end": 7387,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7387,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7387,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7269,
											"end": 7397,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7053,
											"end": 7404,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7053,
											"end": 7404,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7053,
											"end": 7404,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7053,
											"end": 7404,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7053,
											"end": 7404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7410,
											"end": 7633,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 7410,
											"end": 7633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7550,
											"end": 7584,
											"name": "PUSH",
											"source": 4,
											"value": "4E6F7420656E6F756768204F50497320696E2062616C616E6365206F66204F70"
										},
										{
											"begin": 7546,
											"end": 7547,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7538,
											"end": 7544,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7534,
											"end": 7548,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7527,
											"end": 7585,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7619,
											"end": 7625,
											"name": "PUSH",
											"source": 4,
											"value": "6944657800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7614,
											"end": 7616,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7606,
											"end": 7612,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7602,
											"end": 7617,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7595,
											"end": 7626,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7410,
											"end": 7633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7410,
											"end": 7633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7639,
											"end": 8005,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 7639,
											"end": 8005,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7784,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 7866,
											"end": 7868,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 7861,
											"end": 7864,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 7802,
											"end": 7869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 7802,
											"end": 7869,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7795,
											"end": 7869,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7795,
											"end": 7869,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7878,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 7967,
											"end": 7970,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7878,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 7878,
											"end": 7971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7878,
											"end": 7971,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 7878,
											"end": 7971,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7996,
											"end": 7998,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7991,
											"end": 7994,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7987,
											"end": 7999,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7980,
											"end": 7999,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7980,
											"end": 7999,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7639,
											"end": 8005,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7639,
											"end": 8005,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7639,
											"end": 8005,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7639,
											"end": 8005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8011,
											"end": 8430,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 8011,
											"end": 8430,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8177,
											"end": 8181,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8215,
											"end": 8217,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8204,
											"end": 8213,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8200,
											"end": 8218,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8264,
											"end": 8273,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8258,
											"end": 8262,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8254,
											"end": 8274,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8250,
											"end": 8251,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8239,
											"end": 8248,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8235,
											"end": 8252,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8228,
											"end": 8275,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8292,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 8418,
											"end": 8422,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8292,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 8292,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8292,
											"end": 8423,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 8292,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8284,
											"end": 8423,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8284,
											"end": 8423,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8011,
											"end": 8430,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8011,
											"end": 8430,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8011,
											"end": 8430,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8011,
											"end": 8430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8436,
											"end": 8768,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 8436,
											"end": 8768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8557,
											"end": 8561,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8595,
											"end": 8597,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8584,
											"end": 8593,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8580,
											"end": 8598,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8572,
											"end": 8598,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8572,
											"end": 8598,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8608,
											"end": 8679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 8676,
											"end": 8677,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8665,
											"end": 8674,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8661,
											"end": 8678,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8652,
											"end": 8658,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8608,
											"end": 8679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 8608,
											"end": 8679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8608,
											"end": 8679,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 8608,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8689,
											"end": 8761,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 8757,
											"end": 8759,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8746,
											"end": 8755,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8742,
											"end": 8760,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8733,
											"end": 8739,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8689,
											"end": 8761,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 8689,
											"end": 8761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8689,
											"end": 8761,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 8689,
											"end": 8761,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8436,
											"end": 8768,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 8436,
											"end": 8768,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8436,
											"end": 8768,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8436,
											"end": 8768,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8436,
											"end": 8768,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8436,
											"end": 8768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8774,
											"end": 8864,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 8774,
											"end": 8864,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8808,
											"end": 8815,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8851,
											"end": 8856,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8844,
											"end": 8857,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8837,
											"end": 8858,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8826,
											"end": 8858,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8826,
											"end": 8858,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8774,
											"end": 8864,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8774,
											"end": 8864,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8774,
											"end": 8864,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8774,
											"end": 8864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8870,
											"end": 8986,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 8870,
											"end": 8986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8940,
											"end": 8961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 8955,
											"end": 8960,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8940,
											"end": 8961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 8940,
											"end": 8961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8940,
											"end": 8961,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 8940,
											"end": 8961,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8933,
											"end": 8938,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8930,
											"end": 8962,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8920,
											"end": 8980,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 8920,
											"end": 8980,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8976,
											"end": 8977,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8973,
											"end": 8974,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8966,
											"end": 8978,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8920,
											"end": 8980,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 8920,
											"end": 8980,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8870,
											"end": 8986,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8870,
											"end": 8986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8992,
											"end": 9129,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 8992,
											"end": 9129,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9046,
											"end": 9051,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9077,
											"end": 9083,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9084,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9062,
											"end": 9084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9062,
											"end": 9084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9093,
											"end": 9123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 9117,
											"end": 9122,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9093,
											"end": 9123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 9093,
											"end": 9123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9093,
											"end": 9123,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 9093,
											"end": 9123,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8992,
											"end": 9129,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8992,
											"end": 9129,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8992,
											"end": 9129,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8992,
											"end": 9129,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8992,
											"end": 9129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9135,
											"end": 9480,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 9135,
											"end": 9480,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9202,
											"end": 9208,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9251,
											"end": 9253,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9239,
											"end": 9248,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9230,
											"end": 9237,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9226,
											"end": 9249,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9222,
											"end": 9254,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 9219,
											"end": 9338,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9219,
											"end": 9338,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 9219,
											"end": 9338,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9257,
											"end": 9336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 9257,
											"end": 9336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 9257,
											"end": 9336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9257,
											"end": 9336,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 9257,
											"end": 9336,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9219,
											"end": 9338,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 9219,
											"end": 9338,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9377,
											"end": 9378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9402,
											"end": 9463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 9455,
											"end": 9462,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9446,
											"end": 9452,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9435,
											"end": 9444,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9431,
											"end": 9453,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9402,
											"end": 9463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 9402,
											"end": 9463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9402,
											"end": 9463,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 9402,
											"end": 9463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9392,
											"end": 9463,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9392,
											"end": 9463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9348,
											"end": 9473,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9135,
											"end": 9480,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9135,
											"end": 9480,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9135,
											"end": 9480,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9135,
											"end": 9480,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9135,
											"end": 9480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9486,
											"end": 9667,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 9486,
											"end": 9667,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9626,
											"end": 9659,
											"name": "PUSH",
											"source": 4,
											"value": "4661696C656420746F207472616E73666572204F50497320746F207573657200"
										},
										{
											"begin": 9622,
											"end": 9623,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9614,
											"end": 9620,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9610,
											"end": 9624,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9603,
											"end": 9660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9486,
											"end": 9667,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9486,
											"end": 9667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9673,
											"end": 10039,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 9673,
											"end": 10039,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9815,
											"end": 9818,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 9900,
											"end": 9902,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 9895,
											"end": 9898,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9836,
											"end": 9903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 9836,
											"end": 9903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9836,
											"end": 9903,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 9836,
											"end": 9903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9829,
											"end": 9903,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9829,
											"end": 9903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9912,
											"end": 10005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 10001,
											"end": 10004,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9912,
											"end": 10005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 9912,
											"end": 10005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9912,
											"end": 10005,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 9912,
											"end": 10005,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10030,
											"end": 10032,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10025,
											"end": 10028,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10021,
											"end": 10033,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10014,
											"end": 10033,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10014,
											"end": 10033,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9673,
											"end": 10039,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9673,
											"end": 10039,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9673,
											"end": 10039,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9673,
											"end": 10039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10045,
											"end": 10464,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 10045,
											"end": 10464,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10211,
											"end": 10215,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10249,
											"end": 10251,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10238,
											"end": 10247,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10252,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10226,
											"end": 10252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10226,
											"end": 10252,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10298,
											"end": 10307,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10292,
											"end": 10296,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10288,
											"end": 10308,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10284,
											"end": 10285,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10282,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10269,
											"end": 10286,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10262,
											"end": 10309,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10326,
											"end": 10457,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 10452,
											"end": 10456,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10326,
											"end": 10457,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 10326,
											"end": 10457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10326,
											"end": 10457,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 10326,
											"end": 10457,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10318,
											"end": 10457,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10318,
											"end": 10457,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10045,
											"end": 10464,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10045,
											"end": 10464,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10045,
											"end": 10464,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10045,
											"end": 10464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10470,
											"end": 10912,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 10470,
											"end": 10912,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10619,
											"end": 10623,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10657,
											"end": 10659,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 10646,
											"end": 10655,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10642,
											"end": 10660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10634,
											"end": 10660,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10634,
											"end": 10660,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10670,
											"end": 10741,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 10738,
											"end": 10739,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10727,
											"end": 10736,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10740,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10714,
											"end": 10720,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10670,
											"end": 10741,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 10670,
											"end": 10741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10670,
											"end": 10741,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 10670,
											"end": 10741,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10751,
											"end": 10823,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 10819,
											"end": 10821,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10808,
											"end": 10817,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10804,
											"end": 10822,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10795,
											"end": 10801,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10751,
											"end": 10823,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 10751,
											"end": 10823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10751,
											"end": 10823,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 10751,
											"end": 10823,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10833,
											"end": 10905,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 10901,
											"end": 10903,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10890,
											"end": 10899,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10886,
											"end": 10904,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10877,
											"end": 10883,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10833,
											"end": 10905,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 10833,
											"end": 10905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10833,
											"end": 10905,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 10833,
											"end": 10905,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10470,
											"end": 10912,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 10470,
											"end": 10912,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10470,
											"end": 10912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10470,
											"end": 10912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10470,
											"end": 10912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10470,
											"end": 10912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10470,
											"end": 10912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10918,
											"end": 11143,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 10918,
											"end": 11143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11058,
											"end": 11092,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 11054,
											"end": 11055,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11046,
											"end": 11052,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11042,
											"end": 11056,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11035,
											"end": 11093,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11127,
											"end": 11135,
											"name": "PUSH",
											"source": 4,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11122,
											"end": 11124,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11114,
											"end": 11120,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11110,
											"end": 11125,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11103,
											"end": 11136,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10918,
											"end": 11143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10918,
											"end": 11143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11149,
											"end": 11515,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 11149,
											"end": 11515,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11291,
											"end": 11294,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11312,
											"end": 11379,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 11376,
											"end": 11378,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 11371,
											"end": 11374,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11312,
											"end": 11379,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 11312,
											"end": 11379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11312,
											"end": 11379,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 11312,
											"end": 11379,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11305,
											"end": 11379,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11305,
											"end": 11379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11388,
											"end": 11481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 11477,
											"end": 11480,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11388,
											"end": 11481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 11388,
											"end": 11481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11388,
											"end": 11481,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 11388,
											"end": 11481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11506,
											"end": 11508,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11501,
											"end": 11504,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11497,
											"end": 11509,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11490,
											"end": 11509,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11490,
											"end": 11509,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11149,
											"end": 11515,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11149,
											"end": 11515,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11149,
											"end": 11515,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11149,
											"end": 11515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11521,
											"end": 11940,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 11521,
											"end": 11940,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11687,
											"end": 11691,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11725,
											"end": 11727,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11714,
											"end": 11723,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11710,
											"end": 11728,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11702,
											"end": 11728,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11702,
											"end": 11728,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11774,
											"end": 11783,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11768,
											"end": 11772,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11764,
											"end": 11784,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11760,
											"end": 11761,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11749,
											"end": 11758,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11745,
											"end": 11762,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11738,
											"end": 11785,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11802,
											"end": 11933,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 11928,
											"end": 11932,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11802,
											"end": 11933,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 11802,
											"end": 11933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11802,
											"end": 11933,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 11802,
											"end": 11933,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11794,
											"end": 11933,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11794,
											"end": 11933,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11521,
											"end": 11940,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11521,
											"end": 11940,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11521,
											"end": 11940,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11521,
											"end": 11940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11946,
											"end": 12128,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 11946,
											"end": 12128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12086,
											"end": 12120,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12082,
											"end": 12083,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12074,
											"end": 12080,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12070,
											"end": 12084,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12063,
											"end": 12121,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11946,
											"end": 12128,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11946,
											"end": 12128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12134,
											"end": 12500,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 12134,
											"end": 12500,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12276,
											"end": 12279,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12297,
											"end": 12364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 12361,
											"end": 12363,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12356,
											"end": 12359,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12297,
											"end": 12364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 12297,
											"end": 12364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12297,
											"end": 12364,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 12297,
											"end": 12364,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12290,
											"end": 12364,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12290,
											"end": 12364,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12373,
											"end": 12466,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 12462,
											"end": 12465,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12373,
											"end": 12466,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 12373,
											"end": 12466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12373,
											"end": 12466,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 12373,
											"end": 12466,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12491,
											"end": 12493,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12486,
											"end": 12489,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12475,
											"end": 12494,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12475,
											"end": 12494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12134,
											"end": 12500,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12134,
											"end": 12500,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12134,
											"end": 12500,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12134,
											"end": 12500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12506,
											"end": 12925,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 12506,
											"end": 12925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12672,
											"end": 12676,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12710,
											"end": 12712,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12699,
											"end": 12708,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12695,
											"end": 12713,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12687,
											"end": 12713,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12687,
											"end": 12713,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12759,
											"end": 12768,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12753,
											"end": 12757,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12749,
											"end": 12769,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12745,
											"end": 12746,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12734,
											"end": 12743,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12730,
											"end": 12747,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12723,
											"end": 12770,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12787,
											"end": 12918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 12913,
											"end": 12917,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12787,
											"end": 12918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 12787,
											"end": 12918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12787,
											"end": 12918,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 12787,
											"end": 12918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12779,
											"end": 12918,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12779,
											"end": 12918,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12506,
											"end": 12925,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12506,
											"end": 12925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12506,
											"end": 12925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12506,
											"end": 12925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/CertifAlyra/OpiDex.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buyTokens()": "d0febe4c",
							"opiContractAddress()": "007c8069",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"tokensPerEth()": "cbdd69b5",
							"transferOwnership(address)": "f2fde38b",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_opiAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sounderAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountOfETH\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountOfOPIs\",\"type\":\"uint256\"}],\"name\":\"OpiBuyed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"buyTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"opiContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensPerEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"buyTokens()\":{\"notice\":\"Sounders users to buy token for ETH\"},\"withdraw()\":{\"notice\":\"Allow the owner of the contract to withdraw ETH\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CertifAlyra/OpiDex.sol\":\"OpiDex\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/CertifAlyra/OpiDex.sol\":{\"keccak256\":\"0x9cf1dff4a8ee43af3bccc4af10ee4aed5a45758908b5e3f65aaa8632d3b9f378\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://004191319c70bd4a96953e8be725fd0e5e2797a54c4d9c2d035cba275105e53f\",\"dweb:/ipfs/QmdcJ9n9oNmwzKm6ceuZojhXpjVqmsgWEvZNNPYSM8sDYH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/CertifAlyra/OpiDex.sol:OpiDex",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 221,
								"contract": "contracts/CertifAlyra/OpiDex.sol:OpiDex",
								"label": "opi",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)190"
							},
							{
								"astId": 223,
								"contract": "contracts/CertifAlyra/OpiDex.sol:OpiDex",
								"label": "opiContractAddress",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 226,
								"contract": "contracts/CertifAlyra/OpiDex.sol:OpiDex",
								"label": "tokensPerEth",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)190": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"buyTokens()": {
								"notice": "Sounders users to buy token for ETH"
							},
							"withdraw()": {
								"notice": "Allow the owner of the contract to withdraw ETH"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							212
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 213,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 212,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								212
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 202,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							190
						]
					},
					"id": 191,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 190,
							"linearizedBaseContracts": [
								190
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 124,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 133,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 190,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 190,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 154,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 190,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 190,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 174,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 190,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 190,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 191,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							212
						]
					},
					"id": 213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 192,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 193,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 212,
							"linearizedBaseContracts": [
								212
							],
							"name": "Context",
							"nameLocation": "626:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "702:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 198,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 197,
												"id": 200,
												"nodeType": "Return",
												"src": "712:17:2"
											}
										]
									},
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:2"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "693:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:2"
									},
									"scope": 212,
									"src": "640:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "809:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 207,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 206,
												"id": 209,
												"nodeType": "Return",
												"src": "819:15:2"
											}
										]
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:2"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "793:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 204,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:2"
									},
									"scope": 212,
									"src": "742:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 213,
							"src": "608:235:2",
							"usedErrors": []
						}
					],
					"src": "86:758:2"
				},
				"id": 2
			},
			"contracts/CertifAlyra/OpiDex.sol": {
				"ast": {
					"absolutePath": "contracts/CertifAlyra/OpiDex.sol",
					"exportedSymbols": {
						"Context": [
							212
						],
						"IERC20": [
							190
						],
						"OpiDex": [
							352
						],
						"Ownable": [
							112
						]
					},
					"id": 353,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 214,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 215,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 353,
							"sourceUnit": 113,
							"src": "61:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 216,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 353,
							"sourceUnit": 191,
							"src": "114:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 217,
										"name": "Ownable",
										"nameLocations": [
											"191:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "191:7:3"
									},
									"id": 218,
									"nodeType": "InheritanceSpecifier",
									"src": "191:7:3"
								}
							],
							"canonicalName": "OpiDex",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 352,
							"linearizedBaseContracts": [
								352,
								112,
								212
							],
							"name": "OpiDex",
							"nameLocation": "181:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 221,
									"mutability": "mutable",
									"name": "opi",
									"nameLocation": "212:3:3",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "205:10:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$190",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 220,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 219,
											"name": "IERC20",
											"nameLocations": [
												"205:6:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 190,
											"src": "205:6:3"
										},
										"referencedDeclaration": 190,
										"src": "205:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$190",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "007c8069",
									"id": 223,
									"mutability": "mutable",
									"name": "opiContractAddress",
									"nameLocation": "236:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "221:33:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 222,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "221:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cbdd69b5",
									"id": 226,
									"mutability": "mutable",
									"name": "tokensPerEth",
									"nameLocation": "299:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "284:32:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 224,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "284:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 225,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "314:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "942941e55a29218802e75bce2dab045559e45a25e7030efb9a2c5fe5f5851c43",
									"id": 234,
									"name": "OpiBuyed",
									"nameLocation": "329:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"indexed": false,
												"mutability": "mutable",
												"name": "_sounderAddress",
												"nameLocation": "355:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "347:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "347:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amountOfETH",
												"nameLocation": "388:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "380:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amountOfOPIs",
												"nameLocation": "418:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "410:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "337:100:3"
									},
									"src": "323:115:3"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "477:130:3",
										"statements": [
											{
												"expression": {
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 239,
														"name": "opi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "487:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$190",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 241,
																"name": "_opiAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 236,
																"src": "500:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 240,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "493:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "493:19:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$190",
															"typeString": "contract IERC20"
														}
													},
													"src": "487:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "487:25:3"
											},
											{
												"expression": {
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 245,
														"name": "opiContractAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "522:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 246,
														"name": "_opiAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "543:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "522:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "522:32:3"
											}
										]
									},
									"id": 250,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "_opiAddress",
												"nameLocation": "464:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "456:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "455:21:3"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "477:0:3"
									},
									"scope": 352,
									"src": "444:163:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "746:856:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 257,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "764:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "768:5:3",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "764:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "776:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "764:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455448206e656564656420746f20627579204f504973",
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "779:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b37f4016ee9ef53bdce1a1464bdafded2ee3b94515ddb78d7b6e31d2218988a0",
																"typeString": "literal_string \"ETH needed to buy OPIs\""
															},
															"value": "ETH needed to buy OPIs"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b37f4016ee9ef53bdce1a1464bdafded2ee3b94515ddb78d7b6e31d2218988a0",
																"typeString": "literal_string \"ETH needed to buy OPIs\""
															}
														],
														"id": 256,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "756:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "756:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "756:48:3"
											},
											{
												"assignments": [
													265
												],
												"declarations": [
													{
														"constant": false,
														"id": 265,
														"mutability": "mutable",
														"name": "amountToBuy",
														"nameLocation": "823:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 309,
														"src": "815:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 264,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "815:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 270,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 266,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "837:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "841:5:3",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "837:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 268,
														"name": "tokensPerEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "849:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "837:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "815:46:3"
											},
											{
												"assignments": [
													272
												],
												"declarations": [
													{
														"constant": false,
														"id": 272,
														"mutability": "mutable",
														"name": "OpiDexBalance",
														"nameLocation": "968:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 309,
														"src": "960:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 271,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "960:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 277,
												"initialValue": {
													"arguments": [
														{
															"id": 275,
															"name": "opiContractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "998:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 273,
															"name": "opi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "984:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "988:9:3",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 147,
														"src": "984:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "984:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "960:57:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "OpiDexBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "1048:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 280,
																"name": "amountToBuy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "1065:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1048:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f756768204f50497320696e2062616c616e6365206f66204f7069446578",
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1090:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c31f9a91e2829dd8ff87fae1d79147031c9a7a6aa8cedf9412897889cacf6a2b",
																"typeString": "literal_string \"Not enough OPIs in balance of OpiDex\""
															},
															"value": "Not enough OPIs in balance of OpiDex"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c31f9a91e2829dd8ff87fae1d79147031c9a7a6aa8cedf9412897889cacf6a2b",
																"typeString": "literal_string \"Not enough OPIs in balance of OpiDex\""
															}
														],
														"id": 278,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1027:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1027:111:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 284,
												"nodeType": "ExpressionStatement",
												"src": "1027:111:3"
											},
											{
												"assignments": [
													286
												],
												"declarations": [
													{
														"constant": false,
														"id": 286,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "1198:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 309,
														"src": "1193:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 285,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1193:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 293,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 289,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1218:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1222:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1218:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 291,
															"name": "amountToBuy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "1230:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 287,
															"name": "opi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "1205:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1209:8:3",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 157,
														"src": "1205:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1205:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1193:49:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 295,
															"name": "sent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "1440:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f207472616e73666572204f50497320746f2075736572",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1446:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4bcd0a7c3b84d4eacb9dd9f97bfb4fd82d6008c98ec8a5d7b50a883bb6d245ec",
																"typeString": "literal_string \"Failed to transfer OPIs to user\""
															},
															"value": "Failed to transfer OPIs to user"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4bcd0a7c3b84d4eacb9dd9f97bfb4fd82d6008c98ec8a5d7b50a883bb6d245ec",
																"typeString": "literal_string \"Failed to transfer OPIs to user\""
															}
														],
														"id": 294,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1432:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1432:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "1432:48:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 300,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1531:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1531:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 302,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1543:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1547:5:3",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "1543:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 304,
															"name": "amountToBuy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "1554:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 299,
														"name": "OpiBuyed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "1522:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1522:44:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 306,
												"nodeType": "EmitStatement",
												"src": "1517:49:3"
											},
											{
												"expression": {
													"id": 307,
													"name": "amountToBuy",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 265,
													"src": "1584:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 255,
												"id": 308,
												"nodeType": "Return",
												"src": "1577:18:3"
											}
										]
									},
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "613:62:3",
										"text": " @notice Sounders users to buy token for ETH"
									},
									"functionSelector": "d0febe4c",
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyTokens",
									"nameLocation": "689:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "698:2:3"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "733:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "725:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:21:3"
									},
									"scope": 352,
									"src": "680:922:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "1724:261:3",
										"statements": [
											{
												"assignments": [
													317
												],
												"declarations": [
													{
														"constant": false,
														"id": 317,
														"mutability": "mutable",
														"name": "OpiDexBalance",
														"nameLocation": "1742:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 350,
														"src": "1734:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 316,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1734:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 323,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 320,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "1766:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_OpiDex_$352",
																	"typeString": "contract OpiDex"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_OpiDex_$352",
																	"typeString": "contract OpiDex"
																}
															],
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1758:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 318,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1758:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 321,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1758:13:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1772:7:3",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "1758:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1734:45:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 325,
																"name": "OpiDexBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 317,
																"src": "1797:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1813:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1797:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f706944657842616c616e636520686173206e6f7468696e6720746f207769746864726177",
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1816:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_458bb05bcea23a525dcd5cd6b64e1afc3b477434a48c45ae9b6e993fdf450e23",
																"typeString": "literal_string \"OpiDexBalance has nothing to withdraw\""
															},
															"value": "OpiDexBalance has nothing to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_458bb05bcea23a525dcd5cd6b64e1afc3b477434a48c45ae9b6e993fdf450e23",
																"typeString": "literal_string \"OpiDexBalance has nothing to withdraw\""
															}
														],
														"id": 324,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1789:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1789:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1789:67:3"
											},
											{
												"assignments": [
													332,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 332,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "1873:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 350,
														"src": "1868:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 331,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1868:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 344,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1929:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"expression": {
																	"id": 333,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1883:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1887:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1883:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1894:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1883:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 338,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1914:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_OpiDex_$352",
																				"typeString": "contract OpiDex"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_OpiDex_$352",
																				"typeString": "contract OpiDex"
																			}
																		],
																		"id": 337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1906:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 336,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1906:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1906:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1920:7:3",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "1906:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1883:45:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1883:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1867:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 346,
															"name": "sent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "1950:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f20776974686472617721",
															"id": 347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1956:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_034c23fc4a277fa80072f8b13e3eeadfea757cbc7447f31e55b75fbcbea2c25d",
																"typeString": "literal_string \"Failed to withdraw!\""
															},
															"value": "Failed to withdraw!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_034c23fc4a277fa80072f8b13e3eeadfea757cbc7447f31e55b75fbcbea2c25d",
																"typeString": "literal_string \"Failed to withdraw!\""
															}
														],
														"id": 345,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1942:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1942:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 349,
												"nodeType": "ExpressionStatement",
												"src": "1942:36:3"
											}
										]
									},
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "1608:74:3",
										"text": " @notice Allow the owner of the contract to withdraw ETH"
									},
									"functionSelector": "3ccfd60b",
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 314,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 313,
												"name": "onlyOwner",
												"nameLocations": [
													"1714:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1714:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1714:9:3"
										}
									],
									"name": "withdraw",
									"nameLocation": "1696:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1704:2:3"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1724:0:3"
									},
									"scope": 352,
									"src": "1687:298:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 353,
							"src": "172:1815:3",
							"usedErrors": []
						}
					],
					"src": "36:1952:3"
				},
				"id": 3
			}
		}
	}
}